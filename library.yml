openapi: 3.0.0
info:
  title: VicoHome Library API
  description: API for VicoHome video recording library management
  version: 1.0.0

servers:
  - url: https://api-us.vicohome.io
    description: Production API server

paths:
  /library/deletelibrary/:
    post:
      tags:
        - Library Management
      summary: Delete recording
      description: |
        Delete one or more video recordings from cloud storage. This endpoint allows
        users to permanently remove recordings from their account based on the trace IDs.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRecordEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryDeleteRecordResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              
  /library/newselectlibrary:
    post:
      tags:
        - Library Management
      summary: Get event details
      description: |
        Retrieves detailed information about recorded events based on filtering criteria.
        It returns a list of recordings that match the specified filters, including
        video URLs, thumbnails, timestamps, and metadata.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetailResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /library/newselectlibrary/newevent:
    post:
      tags:
        - Library Management
      summary: Get event recordings by filter
      description: |
        Retrieves a list of event recordings based on filtering criteria. Unlike the
        /library/newselectlibrary endpoint, this one returns a simplified list focused 
        more on the recordings themselves than detailed event information. It can also 
        be used to query recordings from either cloud storage or local SD card storage.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryRecordEventResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /library/newselectsinglelibrary:
    post:
      tags:
        - Library Management
      summary: Get library by trace ID
      description: |
        Retrieves complete details for a single recording in the library using its
        unique trace ID. This endpoint is used for viewing detailed recording information,
        sharing recordings, downloading recordings, and displaying event information.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TraceIdEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleLibraryResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Recording not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /library/librarystatus:
    post:
      tags:
        - Library Management
      summary: Get library status
      description: |
        Provides status information about a user's recording library, including event 
        counts grouped by date. This endpoint is primarily used for calendar views to 
        show which days have recordings and how many recordings each day contains.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryStatusResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /library/queryVideoSearchOption:
    post:
      tags:
        - Library Management
      summary: Query video search options
      description: |
        Returns available video search filter options for the library recordings. 
        This endpoint helps populate filter criteria for the video/recording library 
        in the app, including AI-detected events, device-triggered events, user 
        operation filters, and available devices for multi-device filtering.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LibraryOptionRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoSearchOptionResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /library/queryVideoSearchOptionBySn:
    post:
      tags:
        - Library Management
      summary: Query video search options by serial number
      description: |
        Returns available video search filter options for a specific device identified 
        by its serial number. This endpoint is a simplified version of the 
        /library/queryVideoSearchOption endpoint, requiring only the device serial number
        as input. It can only query cloud recordings (not SD card recordings).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LibraryOptionRequestBySn'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoSearchOptionResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /library/updatemarked:
    post:
      tags:
        - Library Management
      summary: Set mark status
      description: |
        Updates the "marked" status (favorited/starred) of one or more recordings in 
        the video library. This allows users to mark important recordings for quick 
        reference later or to filter recordings by marked status.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetMarkEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /library/updatemissing:
    post:
      tags:
        - Library Management
      summary: Set read status
      description: |
        Updates the read status of one or more recordings in the video library.
        This allows the app to mark recordings as read or unread, which is typically
        used to track which recordings the user has viewed and to display unread
        indicators in the UI.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetReadStatusEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /library/othertagnamelist:
    post:
      tags:
        - Library Management
      summary: Get filter tag list
      description: |
        Retrieves a list of filter tags that can be used for filtering events in the 
        library. These tags represent categories like person detection, package detection, 
        vehicle detection, doorbell events, etc., and are displayed in the UI as 
        selectable filter options for narrowing down recordings.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterTagListResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /library/getQuestionBackOptionsV2:
    post:
      tags:
        - Library Management
      summary: Get library feedback options
      description: |
        Retrieves available feedback options for videos/events in the library. This endpoint
        allows users to provide feedback on detection accuracy and other issues with recordings.
        The feedback options are hierarchical, with parent options that may contain child options,
        enabling more detailed feedback collection.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LibraryFeedbackEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryFeedbackResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /library/freeuser/banner:
    post:
      tags:
        - Library Management
      summary: Query payment banner
      description: |
        Queries payment promotion banner information for free users in the library section.
        This endpoint is used to display promotional banners that inform free users about 
        storage limitations and encourage upgrades to paid subscriptions. The banner can 
        show different types of messages related to storage capacity in days or GB.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryPayBannerResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /library/freeuser/banner/close:
    post:
      tags:
        - Library Management
      summary: Report banner shown
      description: |
        Reports when a payment promotion banner has been shown or closed by the user.
        This endpoint is called after displaying a promotional banner to track user 
        interactions, such as dismissing the banner or navigating away from the screen. 
        It's primarily used for analytics purposes to measure banner effectiveness.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /library/commitQuestionBack:
    post:
      tags:
        - Library Management
      summary: Upload feedback information
      description: |
        Submits user feedback about video events and detection quality. This endpoint 
        allows users to report issues with recordings such as false detections,
        missed events, or other quality problems. It's used to collect user feedback
        about AI detection accuracy and improve the system over time.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LibraryFeedbackSubmitEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    LibraryFeedbackSubmitEntry:
      type: object
      description: Request parameters for submitting feedback about a library recording
      required:
        - traceId
        - userId
        - codes
      properties:
        traceId:
          type: string
          description: The trace ID of the recording being given feedback on
          example: "20220412150322_ABC123456789"
        userId:
          type: integer
          description: User ID submitting the feedback
          example: 123456
        codes:
          type: array
          description: Array of feedback reason codes selected by the user
          items:
            type: integer
          example: [101, 203]
        remark:
          type: string
          description: Additional user comments/feedback
          example: "The detection missed a person at the edge of the frame"
        app:
          type: object
          properties:
            type:
              type: string
              description: Application type identifier
              example: "android"
            version:
              type: string
              description: Application version
              example: "1.2.3"
        countryNo:
          type: string
          description: User's country code
          example: "US"
        language:
          type: string
          description: User's language preference
          example: "en"
        tenantId:
          type: string
          description: User's tenant ID
          
    DeleteRecordEntry:
      type: object
      description: Request parameters for deleting recordings
      required:
        - traceIdList
      properties:
        traceIdList:
          type: array
          description: List of recording IDs (trace IDs) to delete
          items:
            type: string
          example: ["trace123", "trace456", "trace789"]
        token:
          type: string
          description: Authentication token (optional, usually sent in headers)
          
    LibraryDeleteRecordResponse:
      type: object
      properties:
        result:
          type: integer
          description: Result code (0 for success)
          example: 0
        msg:
          type: string
          description: Message describing the result
          example: "Success"
        data:
          type: object
          description: Data object containing deletion details
      required:
        - result
        - msg
    
    FilterEntry:
      type: object
      description: Request parameters for filtering library recordings
      properties:
        serialNumber:
          type: array
          description: List of device serial numbers to filter by
          items:
            type: string
          example: ["ABC123456789"]
        startTimestamp:
          type: integer
          format: int64
          description: Start time in milliseconds since epoch
          example: 1649764800000
        endTimestamp:
          type: integer
          format: int64
          description: End time in milliseconds since epoch
          example: 1649851200000
        from:
          type: integer
          description: Pagination start index
          example: 0
        to:
          type: integer
          description: Pagination end index
          example: 20
        tags:
          type: array
          description: Filter by specific event tags
          items:
            type: string
          example: ["motion"]
        objectNames:
          type: array
          description: Filter by detected object types
          items:
            type: string
          example: ["person", "vehicle"]
        marked:
          type: integer
          description: Filter by marked status (0=unmarked, 1=marked)
          enum: [0, 1]
          example: 0
        missing:
          type: integer
          description: Filter by read status (0=read, 1=unread)
          enum: [0, 1]
          example: 0
        isFromSDCard:
          type: boolean
          description: Whether to fetch from SD card storage
          example: false
        serialNumberToActivityZone:
          type: object
          description: Filter by activity zones for specific devices
          additionalProperties:
            type: array
            items:
              type: integer
          example: {"ABC123456789": [1, 2]}
        videoEventKey:
          type: string
          description: Filter by specific video event key
          example: "motion_detection"
        doorbellTags:
          type: array
          description: Filter by doorbell specific tags
          items:
            type: string
          example: ["button_press"]
        deviceCallEventTag:
          type: string
          description: Filter by device call event tag
          example: "call_start"
        deviceName:
          type: string
          description: Filter by device name
          example: "Front Door Camera"
          
    EventDetailResponse:
      type: object
      properties:
        result:
          type: integer
          description: Result code (0 for success)
          example: 0
        msg:
          type: string
          description: Message describing the result
          example: "success"
        data:
          type: object
          properties:
            total:
              type: integer
              description: Total number of records matching the filter criteria
              example: 42
            list:
              type: array
              description: List of event records
              items:
                $ref: '#/components/schemas/EventRecord'
      required:
        - result
        - msg
        
    EventRecord:
      type: object
      description: Record of a single event in the library
      properties:
        traceId:
          type: string
          description: Unique identifier for the recording
          example: "20220412150322_ABC123456789"
        serialNumber:
          type: string
          description: Device serial number
          example: "ABC123456789"
        deviceName:
          type: string
          description: Name of the device
          example: "Front Door Camera"
        timestamp:
          type: integer
          description: Event timestamp in seconds since epoch
          example: 1649764800
        date:
          type: string
          description: Formatted date string
          example: "2022-04-12 15:03:22"
        videoUrl:
          type: string
          description: URL to the video recording
          example: "https://storage.vicohome.io/videos/20220412150322_ABC123456789.mp4"
        imageUrl:
          type: string
          description: URL to the event thumbnail image
          example: "https://storage.vicohome.io/images/20220412150322_ABC123456789.jpg"
        fileSize:
          type: integer
          description: Size of the recording file in bytes
          example: 1245678
        type:
          type: integer
          description: Event type code
          example: 1
        period:
          type: number
          format: double
          description: Recording duration in seconds
          example: 15.5
        tags:
          type: string
          description: Event tags
          example: "motion"
        marked:
          type: integer
          description: Whether the event is marked/favorited (0=no, 1=yes)
          enum: [0, 1]
          example: 0
        missing:
          type: integer
          description: Whether the event is unread (0=read, 1=unread)
          enum: [0, 1]
          example: 0
        userId:
          type: integer
          description: User ID
          example: 12345
        userName:
          type: string
          description: User name
          example: "user@example.com"
        adminId:
          type: integer
          description: Admin ID
          example: 12345
        adminName:
          type: string
          description: Admin name
          example: "user@example.com"
        adminIsVip:
          type: boolean
          description: Whether the admin has VIP subscription
          example: true
        locationId:
          type: integer
          description: ID of the location
          example: 6789
        locationName:
          type: string
          description: Name of the location
          example: "Home"
        timeZone:
          type: integer
          description: Timezone offset in minutes
          example: -300
        dst:
          type: integer
          description: Daylight saving time adjustment
          example: 1
        timeFormat:
          type: integer
          description: Time format preference (12/24 hour)
          enum: [12, 24]
          example: 12
        activityZoneName:
          type: string
          description: Name of the triggered activity zone
          example: "Driveway"
        role:
          type: string
          description: User role
          example: "owner"
        mediaType:
          type: string
          description: Type of media
          enum: ["video", "image"]
          example: "video"
        imageOnly:
          type: integer
          description: Indicates if only image is available
          enum: [0, 1]
          example: 0
        deviceAiEventList:
          type: array
          description: List of AI detection events
          items:
            type: string
          example: ["person", "vehicle"]
        eventInfoList:
          type: array
          description: Additional event information
          items:
            type: string
          example: ["Person detected"]
        hasPossibleSubcategory:
          type: boolean
          description: Whether subcategories exist for this event
          example: true
        subcategoryInfoList:
          type: array
          description: List of object subcategory information
          items:
            $ref: '#/components/schemas/SubcategoryInfo'
            
    SubcategoryInfo:
      type: object
      description: Information about detected object subcategories
      properties:
        objectName:
          type: string
          description: Name of the detected object
          example: "person"
        url:
          type: string
          description: Image URL for the detected object
          example: "https://storage.vicohome.io/ai/person/20220412150322_ABC123456789.jpg"
        birdStdName:
          type: string
          description: Standard name (for bird detection)
          example: "Robin"
          
    LibraryRecordEventResponse:
      type: object
      description: Response containing a list of event recordings
      properties:
        result:
          type: integer
          description: Result code (0 for success)
          example: 0
        msg:
          type: string
          description: Message describing the result
          example: "success"
        data:
          type: object
          properties:
            eventList:
              type: array
              description: List of event recordings
              items:
                $ref: '#/components/schemas/RecordingEvent'
            totalCount:
              type: integer
              description: Total count of matching recordings
              example: 42
            hasMore:
              type: boolean
              description: Indicates if more recordings are available
              example: true
      required:
        - result
        - msg
        
    RecordingEvent:
      type: object
      description: Information about a single recording event
      properties:
        deviceSn:
          type: string
          description: Device serial number
          example: "ABC123456789"
        deviceName:
          type: string
          description: Device name
          example: "Front Door Camera"
        readStatus:
          type: integer
          description: Read status (0=read, 1=unread)
          enum: [0, 1]
          example: 0
        traceId:
          type: string
          description: Unique trace ID
          example: "20220412150322_ABC123456789"
        thumbnail:
          type: string
          description: Thumbnail image URL
          example: "https://storage.vicohome.io/images/20220412150322_ABC123456789.jpg"
        timestamp:
          type: integer
          format: int64
          description: Event timestamp in milliseconds since epoch
          example: 1649764800000
        eventType:
          type: integer
          description: Event type code
          example: 1
        marked:
          type: integer
          description: Marked status (0=unmarked, 1=marked)
          enum: [0, 1]
          example: 0
        tags:
          type: array
          description: Array of event tags
          items:
            type: string
          example: ["motion"]
        objectNames:
          type: array
          description: Array of detected objects
          items:
            type: string
          example: ["person", "vehicle"]
        alertZone:
          type: integer
          description: Activity zone ID
          example: 2
        recordStatus:
          type: integer
          description: Recording status code
          example: 0
        fileSize:
          type: integer
          description: File size in bytes
          example: 1245678
        recordUrl:
          type: string
          description: Recording URL
          example: "https://storage.vicohome.io/videos/20220412150322_ABC123456789.mp4"
        recordLen:
          type: number
          format: double
          description: Recording length in seconds
          example: 15.5
        videoQuality:
          type: string
          description: Video quality
          example: "HD"
          
    TraceIdEntry:
      type: object
      description: Request parameters for retrieving a specific recording
      required:
        - traceId
      properties:
        traceId:
          type: string
          description: Unique identifier for the recording
          example: "20220412150322_ABC123456789"
        app:
          type: object
          properties:
            type:
              type: string
              description: Application type identifier
              example: "android"
            version:
              type: string
              description: Application version
              example: "1.2.3"
        countryNo:
          type: string
          description: User's country code
          example: "US"
        language:
          type: string
          description: User's language preference
          example: "en"
        tenantId:
          type: string
          description: User's tenant ID
          
    SingleLibraryResponse:
      type: object
      description: Response containing details for a single recording
      properties:
        result:
          type: integer
          description: Result code (0 for success)
          example: 0
        msg:
          type: string
          description: Message describing the result
          example: "Success"
        data:
          $ref: '#/components/schemas/RecordBean'
      required:
        - result
        - msg
        
    LibraryStatusResponse:
      type: object
      description: Response containing status information about the recording library
      properties:
        result:
          type: integer
          description: Result code (0 for success)
          example: 0
        msg:
          type: string
          description: Message describing the result
          example: "Success"
        data:
          type: object
          properties:
            list:
              type: array
              description: List of status counts by date
              items:
                $ref: '#/components/schemas/DateCountItem'
      required:
        - result
        - msg
        
    DateCountItem:
      type: object
      description: Recording count for a specific date
      properties:
        count:
          type: integer
          description: Number of recordings for this date
          example: 12
        dateTimestamp:
          type: integer
          description: Date timestamp in Unix seconds (not milliseconds)
          example: 1649721600
          
    LibraryOptionRequest:
      type: object
      description: Request parameters for querying video search options
      properties:
        SN:
          type: string
          description: Device serial number
          example: "ABC123456789"
        isFromSDCard:
          type: boolean
          description: Whether to query from SD card storage instead of cloud
          example: false
          
    LibraryOptionRequestBySn:
      type: object
      description: Request parameters for querying video search options by serial number
      required:
        - sn
      properties:
        sn:
          type: string
          description: Device serial number
          example: "ABC123456789"
        app:
          type: object
          properties:
            apiVersion:
              type: string
              description: API version
              example: "1.0"
            appName:
              type: string
              description: Application name
              example: "VicoHome"
            appType:
              type: string
              description: Application type
              example: "android"
            bundle:
              type: string
              description: Application bundle identifier
              example: "com.vicoo.vicohome"
            countlyId:
              type: string
              description: Analytics ID
            env:
              type: string
              description: Environment
              example: "prod"
            tenantId:
              type: string
              description: Tenant ID
            timeZone:
              type: string
              description: User's timezone
              example: "America/New_York"
            version:
              type: string
              description: Application version
              example: "1.2.3"
            versionName:
              type: string
              description: Application version name
              example: "1.2.3"
        countryNo:
          type: string
          description: Country code
          example: "US"
        language:
          type: string
          description: User's language preference
          example: "en"
        tenantId:
          type: string
          description: User's tenant ID
          
    VideoSearchOptionResponse:
      type: object
      description: Response containing available video search filter options
      properties:
        result:
          type: integer
          description: Result code (0 for success)
          example: 0
        msg:
          type: string
          description: Message describing the result
          example: "Success"
        data:
          $ref: '#/components/schemas/TagBean'
      required:
        - result
        - msg
        
    TagBean:
      type: object
      description: Container for various search filter options
      properties:
        aiEventTags:
          type: array
          description: List of AI event filter tags
          items:
            $ref: '#/components/schemas/TagItem'
          example: [{"name": "person", "subTags": []}, {"name": "vehicle", "subTags": []}]
        deviceEventTags:
          type: array
          description: List of device event filter tags
          items:
            $ref: '#/components/schemas/TagItem'
          example: [{"name": "motion", "subTags": []}, {"name": "sound", "subTags": []}]
        operateOptions:
          type: array
          description: List of operation filter tags
          items:
            $ref: '#/components/schemas/TagItem'
          example: [{"name": "marked", "subTags": []}, {"name": "unread", "subTags": []}]
        devices:
          type: array
          description: List of available devices
          items:
            $ref: '#/components/schemas/DeviceInfo'
          
    TagItem:
      type: object
      description: Information about a filter tag
      properties:
        name:
          type: string
          description: Tag name
          example: "person"
        subTags:
          type: array
          description: Optional sub-tags
          items:
            $ref: '#/components/schemas/TagItem'
          
    DeviceInfo:
      type: object
      description: Information about a device for filtering
      properties:
        serialNumber:
          type: string
          description: Device serial number
          example: "ABC123456789"
        deviceName:
          type: string
          description: Device name
          example: "Front Door Camera"
        isBind:
          type: boolean
          description: Whether device is bound to user
          example: true
        modelCategory:
          type: integer
          description: Device model category
          example: 1
        roleId:
          type: integer
          description: User role for device (1 = admin)
          example: 1
          
    SetMarkEntry:
      type: object
      description: Request parameters for setting mark status of recordings
      required:
        - marked
      properties:
        marked:
          type: integer
          description: Status to set (1 = mark, 0 = unmark)
          enum: [0, 1]
          example: 1
        traceIds:
          type: string
          description: Comma-separated list of recording trace IDs to update
          example: "trace123,trace456,trace789"
        traceId:
          type: string
          description: Single trace ID to update (alternative to traceIds)
          example: "trace123"
        markIds:
          type: array
          description: List of trace IDs to update (alternative to traceIds)
          items:
            type: string
          example: ["trace123", "trace456", "trace789"]
          
    SetReadStatusEntry:
      type: object
      description: Request parameters for setting read status of recordings
      required:
        - missing
      properties:
        missing:
          type: integer
          description: Status to set (1 = read, 0 = unread)
          enum: [0, 1]
          example: 1
        traceIds:
          type: string
          description: Comma-separated list of recording trace IDs to update
          example: "trace123,trace456,trace789"
        traceId:
          type: string
          description: Single trace ID to update (alternative to traceIds)
          example: "trace123"
        app:
          type: object
          properties:
            type:
              type: string
              description: Application type identifier
              example: "android"
            version:
              type: string
              description: Application version
              example: "1.2.3"
        countryNo:
          type: string
          description: User's country code
          example: "US"
        language:
          type: string
          description: User's language preference
          example: "en"
        tenantId:
          type: string
          description: User's tenant ID
          
    RecordBean:
      type: object
      description: Detailed information about a single recording
      properties:
        traceId:
          type: string
          description: Unique identifier for the recording
          example: "20220412150322_ABC123456789"
        serialNumber:
          type: string
          description: Device serial number
          example: "ABC123456789"
        deviceName:
          type: string
          description: Device name
          example: "Front Door Camera"
        locationId:
          type: integer
          description: ID of the location
          example: 6789
        locationName:
          type: string
          description: Name of the location
          example: "Home"
        timestamp:
          type: integer
          description: Event timestamp in seconds since epoch
          example: 1649764800
        date:
          type: string
          description: Formatted date string
          example: "2022-04-12 15:03:22"
        type:
          type: integer
          description: Recording type code
          example: 1
        imageUrl:
          type: string
          description: URL to the event thumbnail image
          example: "https://storage.vicohome.io/images/20220412150322_ABC123456789.jpg"
        videoUrl:
          type: string
          description: URL to the video recording
          example: "https://storage.vicohome.io/videos/20220412150322_ABC123456789.mp4"
        period:
          type: number
          format: double
          description: Recording duration in seconds
          example: 15.5
        fileSize:
          type: integer
          description: Size of the recording file in bytes
          example: 1245678
        imageOnly:
          type: integer
          description: Indicates if only image is available (0=has video, 1=image only)
          enum: [0, 1]
          example: 0
        mediaType:
          type: string
          description: Type of media
          enum: ["video", "image"]
          example: "video"
        videoEvent:
          type: string
          description: Video event type
          example: "motion_detection"
        tags:
          type: string
          description: Event tags
          example: "motion"
        marked:
          type: integer
          description: Whether the event is marked/favorited (0=no, 1=yes)
          enum: [0, 1]
          example: 0
        missing:
          type: integer
          description: Whether the event is unread (0=read, 1=unread)
          enum: [0, 1]
          example: 0
        userId:
          type: integer
          description: User ID
          example: 12345
        userName:
          type: string
          description: User name
          example: "user@example.com"
        adminId:
          type: integer
          description: Admin ID
          example: 12345
        adminName:
          type: string
          description: Admin name
          example: "user@example.com"
        adminIsVip:
          type: boolean
          description: Whether the admin has VIP subscription
          example: true
        timeZone:
          type: integer
          description: Timezone offset in minutes
          example: -300
        timeFormat:
          type: integer
          description: Time format preference (12/24 hour)
          enum: [12, 24]
          example: 12
        dst:
          type: integer
          description: Daylight saving time adjustment
          example: 1
        activityZoneName:
          type: string
          description: Name of the triggered activity zone
          example: "Driveway"
        role:
          type: string
          description: User role
          example: "owner"
        deviceAiEventList:
          type: array
          description: List of AI detection events
          items:
            type: string
          example: ["person", "vehicle"]
        eventInfoList:
          type: array
          description: Additional event information
          items:
            type: string
          example: ["Person detected"]
        hasPossibleSubcategory:
          type: boolean
          description: Whether subcategories exist for this event
          example: true
        subcategoryInfoList:
          type: array
          description: List of object subcategory information
          items:
            $ref: '#/components/schemas/SubcategoryInfo'
    
    ErrorResponse:
      type: object
      properties:
        result:
          type: integer
          example: 400
          description: Error code
        msg:
          type: string
          example: "Invalid request parameters"
          description: Error message describing what went wrong
      required:
        - result
        - msg
        
    FilterTagListResponse:
      type: object
      description: Response containing a list of filter tags for library events
      properties:
        result:
          type: integer
          description: Result code (0 for success)
          example: 0
        msg:
          type: string
          description: Message describing the result
          example: "Success"
        data:
          type: object
          properties:
            otherTagNameList:
              type: array
              description: List of tag names for filtering events
              items:
                type: string
              example: ["person", "package", "vehicle", "pet", "motion", "doorbell"]
      required:
        - result
        - msg
        
    LibraryFeedbackEntry:
      type: object
      description: Request parameters for retrieving feedback options
      required:
        - traceId
        - userId
      properties:
        traceId:
          type: string
          description: The trace ID of the event/recording
          example: "20220412150322_ABC123456789"
        userId:
          type: integer
          description: The user's ID
          example: 123456
        codes:
          type: array
          description: Pre-selected option codes (when retrieving existing feedback)
          items:
            type: integer
          example: [101, 203]
        remark:
          type: string
          description: Custom feedback text
          example: "The detection missed a person at the edge of the frame"
        app:
          type: object
          properties:
            type:
              type: string
              description: Application type identifier
              example: "android"
            version:
              type: string
              description: Application version
              example: "1.2.3"
        countryNo:
          type: string
          description: User's country code
          example: "US"
        language:
          type: string
          description: User's language preference
          example: "en"
        tenantId:
          type: string
          description: User's tenant ID
          
    LibraryFeedbackResponse:
      type: object
      description: Response containing feedback options for a library event
      properties:
        result:
          type: integer
          description: Result code (0 for success)
          example: 0
        msg:
          type: string
          description: Message describing the result
          example: "Success"
        data:
          $ref: '#/components/schemas/FeedbackData'
      required:
        - result
        - msg
        
    FeedbackData:
      type: object
      description: Container for feedback data and options
      properties:
        userId:
          type: integer
          description: The user's ID
          example: 123456
        traceId:
          type: string
          description: The trace ID of the event/recording
          example: "20220412150322_ABC123456789"
        libraryId:
          type: string
          description: The library ID
          example: "lib123456"
        serialNumber:
          type: string
          description: The device serial number
          example: "ABC123456789"
        isFirst:
          type: boolean
          description: Whether this is the first feedback for this event
          example: true
        checkedCodes:
          type: array
          description: Previously selected feedback option codes
          items:
            type: integer
          example: [101, 203]
        options:
          type: array
          description: Available feedback options
          items:
            $ref: '#/components/schemas/FeedbackOption'
        remark:
          type: string
          description: Custom feedback text
          example: "The detection missed a person at the edge of the frame"
          
    FeedbackOption:
      type: object
      description: Information about a feedback option
      properties:
        code:
          type: integer
          description: Unique identifier for this option
          example: 101
        title:
          type: string
          description: Display text for the option
          example: "Detection inaccurate"
        checked:
          type: boolean
          description: Whether this option is selected
          example: false
        hasTag:
          type: boolean
          description: Whether this option has an additional tag
          example: false
        tag:
          type: string
          description: Optional tag text
          example: "High priority"
        childOptions:
          type: array
          description: Nested options (for hierarchical feedback)
          items:
            $ref: '#/components/schemas/FeedbackOption'
            
    LibraryPayBannerResponse:
      type: object
      description: Response containing payment promotion banner information
      properties:
        result:
          type: integer
          description: Result code (0 for success)
          example: 0
        msg:
          type: string
          description: Message describing the result
          example: "Success"
        data:
          type: object
          properties:
            notify:
              type: boolean
              description: Whether to show the banner
              example: true
            notifyCount:
              type: integer
              description: Value related to notification (days/GB)
              example: 7
            notifyMessage:
              type: string
              description: Banner message text to display
              example: "You have 7 days of recordings remaining. Upgrade to store more videos."
            notifyType:
              type: integer
              description: Type of notification (0=days, 1=GB)
              enum: [0, 1]
              example: 0
            slotName:
              type: string
              description: Banner slot identifier
              example: "library_banner_1"
            upgradeFreeBtn:
              type: string
              description: Text for the banner button
              example: "Upgrade Now"
            recommendProduct:
              type: object
              description: Information about the recommended subscription product
              properties:
                productId:
                  type: string
                  description: Product identifier
                  example: "sub_premium_monthly"
                name:
                  type: string
                  description: Product name
                  example: "Premium Plan"
                price:
                  type: string
                  description: Product price
                  example: "$5.99"
            recommendProductDO:
              type: object
              description: Detailed product recommendations
              properties:
                monthlyProduct:
                  type: object
                  description: Monthly subscription option
                  properties:
                    id:
                      type: string
                      description: Product ID
                      example: "sub_premium_monthly"
                    name:
                      type: string
                      description: Product name
                      example: "Premium Monthly"
                    price:
                      type: string
                      description: Product price
                      example: "$5.99"
                yearlyProduct:
                  type: object
                  description: Yearly subscription option
                  properties:
                    id:
                      type: string
                      description: Product ID
                      example: "sub_premium_yearly"
                    name:
                      type: string
                      description: Product name
                      example: "Premium Yearly"
                    price:
                      type: string
                      description: Product price
                      example: "$59.99"
            recommendProductV1:
              type: array
              description: List of recommended product options
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: Product ID
                    example: "sub_premium_monthly"
                  name:
                    type: string
                    description: Product name
                    example: "Premium Monthly"
                  price:
                    type: string
                    description: Product price
                    example: "$5.99"
      required:
        - result
        - msg