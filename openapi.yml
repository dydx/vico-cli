openapi: 3.0.0
info:
  title: VicoHome API
  description: Complete API for VicoHome platform
  version: 1.0.0
  contact:
    name: VicoHome Support
    url: https://vicohome.io/support
    email: support@vicohome.io

servers:
  - url: https://api-us.vicohome.io
    description: Production API server

paths:
  # User Management Endpoints
  /api/userTag:
    post:
      tags:
        - User Management
      summary: Get user bucket parameters for A/B testing
      description: |
        Retrieves user-specific bucket parameters (tags) for A/B testing and feature flag 
        functionality. It's implemented through the GrowthBook SDK for managing features 
        and experiments. The response data is used to determine which features or 
        variations a user should see based on their assigned bucket or segment.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BucketResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  
  # Livestreaming Endpoints
  /dc/rtcconnection/open:
    post:
      tags:
        - Livestreaming
      summary: Open P2P connection for livestreaming
      description: |
        Opens or establishes P2P connections to devices by their serial numbers.
        This endpoint is typically called before attempting to stream video or 
        communicate directly with a device. The P2P connection must be established 
        before real-time operations can be performed.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerialNumberListEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /dc/rtcconnection/close:
    post:
      tags:
        - Livestreaming
      summary: Close P2P connection for livestreaming
      description: |
        Closes peer-to-peer (P2P) connections for live streaming. This endpoint 
        is typically called when the user exits the live streaming view, when the app 
        is going to background, or when the streaming session needs to be terminated.
        It releases resources associated with the connection.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerialNumberListEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  # Library Management Endpoints
  /library/deletelibrary/:
    post:
      tags:
        - Library Management
      summary: Delete recording
      description: |
        Delete one or more video recordings from cloud storage. This endpoint allows
        users to permanently remove recordings from their account based on the trace IDs.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRecordEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryDeleteRecordResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              
  /library/newselectlibrary:
    post:
      tags:
        - Library Management
      summary: Get event details
      description: |
        Retrieves detailed information about recorded events based on filtering criteria.
        It returns a list of recordings that match the specified filters, including
        video URLs, thumbnails, timestamps, and metadata.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetailResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /library/newselectlibrary/newevent:
    post:
      tags:
        - Library Management
      summary: Get event recordings by filter
      description: |
        Retrieves a list of event recordings based on filtering criteria. Unlike the
        /library/newselectlibrary endpoint, this one returns a simplified list focused 
        more on the recordings themselves than detailed event information. It can also 
        be used to query recordings from either cloud storage or local SD card storage.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryRecordEventResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /library/newselectsinglelibrary:
    post:
      tags:
        - Library Management
      summary: Get library by trace ID
      description: |
        Retrieves complete details for a single recording in the library using its
        unique trace ID. This endpoint is used for viewing detailed recording information,
        sharing recordings, downloading recordings, and displaying event information.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TraceIdEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleLibraryResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Recording not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /library/librarystatus:
    post:
      tags:
        - Library Management
      summary: Get library status
      description: |
        Provides status information about a user's recording library, including event 
        counts grouped by date. This endpoint is primarily used for calendar views to 
        show which days have recordings and how many recordings each day contains.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryStatusResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /library/queryVideoSearchOption:
    post:
      tags:
        - Library Management
      summary: Query video search options
      description: |
        Returns available video search filter options for the library recordings. 
        This endpoint helps populate filter criteria for the video/recording library 
        in the app, including AI-detected events, device-triggered events, user 
        operation filters, and available devices for multi-device filtering.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LibraryOptionRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoSearchOptionResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /library/queryVideoSearchOptionBySn:
    post:
      tags:
        - Library Management
      summary: Query video search options by serial number
      description: |
        Returns available video search filter options for a specific device identified 
        by its serial number. This endpoint is a simplified version of the 
        /library/queryVideoSearchOption endpoint, requiring only the device serial number
        as input. It can only query cloud recordings (not SD card recordings).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LibraryOptionRequestBySn'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoSearchOptionResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /library/updatemarked:
    post:
      tags:
        - Library Management
      summary: Set mark status
      description: |
        Updates the "marked" status (favorited/starred) of one or more recordings in 
        the video library. This allows users to mark important recordings for quick 
        reference later or to filter recordings by marked status.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetMarkEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /library/updatemissing:
    post:
      tags:
        - Library Management
      summary: Set read status
      description: |
        Updates the read status of one or more recordings in the video library.
        This allows the app to mark recordings as read or unread, which is typically
        used to track which recordings the user has viewed and to display unread
        indicators in the UI.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetReadStatusEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /library/othertagnamelist:
    post:
      tags:
        - Library Management
      summary: Get filter tag list
      description: |
        Retrieves a list of filter tags that can be used for filtering events in the 
        library. These tags represent categories like person detection, package detection, 
        vehicle detection, doorbell events, etc., and are displayed in the UI as 
        selectable filter options for narrowing down recordings.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterTagListResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /library/getQuestionBackOptionsV2:
    post:
      tags:
        - Library Management
      summary: Get library feedback options
      description: |
        Retrieves available feedback options for videos/events in the library. This endpoint
        allows users to provide feedback on detection accuracy and other issues with recordings.
        The feedback options are hierarchical, with parent options that may contain child options,
        enabling more detailed feedback collection.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LibraryFeedbackEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryFeedbackResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /library/freeuser/banner:
    post:
      tags:
        - Library Management
      summary: Query payment banner
      description: |
        Queries payment promotion banner information for free users in the library section.
        This endpoint is used to display promotional banners that inform free users about 
        storage limitations and encourage upgrades to paid subscriptions. The banner can 
        show different types of messages related to storage capacity in days or GB.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryPayBannerResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /library/freeuser/banner/close:
    post:
      tags:
        - Library Management
      summary: Report banner shown
      description: |
        Reports when a payment promotion banner has been shown or closed by the user.
        This endpoint is called after displaying a promotional banner to track user 
        interactions, such as dismissing the banner or navigating away from the screen. 
        It's primarily used for analytics purposes to measure banner effectiveness.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /library/commitQuestionBack:
    post:
      tags:
        - Library Management
      summary: Upload feedback information
      description: |
        Submits user feedback about video events and detection quality. This endpoint 
        allows users to report issues with recordings such as false detections,
        missed events, or other quality problems. It's used to collect user feedback
        about AI detection accuracy and improve the system over time.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LibraryFeedbackSubmitEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  # Location Management Endpoints
  /location/listlocation:
    post:
      tags:
        - Location Management
      summary: List locations
      description: Retrieves a list of all locations created by the user
      operationId: listLocation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllLocationResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /location/insertlocation/:
    post:
      tags:
        - Location Management
      summary: Add location
      description: Creates a new location for organizing devices
      operationId: insertLocation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationInsertResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /location/updatelocationinfo:
    post:
      tags:
        - Location Management
      summary: Update location
      description: Updates an existing location's information
      operationId: updateLocationInfo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLocationEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          description: Location not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /location/deletelocation:
    post:
      tags:
        - Location Management
      summary: Delete location
      description: Deletes a location and returns a list of affected devices
      operationId: deleteLocation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteLocationEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLocationResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          description: Location not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  # Device Management Endpoints
  /device/listuserdevices:
    post:
      tags:
        - Device Management
      summary: List all devices for a user
      description: Lists all devices associated with a user's account
      operationId: listUserDevices
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllDeviceResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /device/selectsingledevice:
    post:
      tags:
        - Device Management
      summary: Get single device details
      description: Retrieves detailed information about a single device by its serial number
      operationId: getSingleDevice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerialNoEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSingleDeviceResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          description: Device not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /device/deactivatedevice:
    post:
      tags:
        - Device Management
      summary: Unbind a device
      description: Unbinds (deactivates) a device from a user's account
      operationId: deactivateDevice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerialNoEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '403':
          description: Forbidden - user does not have permission to unbind this device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          description: Device not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /device/devicePushImage:
    post:
      tags:
        - Device Management
      summary: Device thumbnail images
      description: Retrieves thumbnail images for user's devices
      operationId: getDeviceThumbnailImages
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceThumbImageResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /device/getDeviceAttributes:
    post:
      tags:
        - Device Management
      summary: Get device attributes
      description: Retrieves various attributes and properties of a device identified by its serial number
      operationId: getDeviceAttributes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceAttributesRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceAttributesResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          description: Device not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /device/modifyDeviceAttributes:
    post:
      tags:
        - Device Management
      summary: Modify device attributes
      description: Modifies attributes and settings of a device identified by its serial number
      operationId: modifyDeviceAttributes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributesEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          description: Device not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /device/otastatus/:
    post:
      tags:
        - Device Management
        - Firmware Updates
      summary: Get OTA update status
      description: Retrieves the current status of an Over-The-Air (OTA) firmware update for a specific device
      operationId: getOtaStatus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerialNoEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOtaStatusResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          description: Device not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /device/otastart/:
    post:
      tags:
        - Device Management
        - Firmware Updates
      summary: Start OTA update
      description: Initiates the Over-The-Air (OTA) firmware update process for a specified device
      operationId: startOtaUpdate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerialNoEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOtaStatusResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          description: Device not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /device/rotate-calibration:
    post:
      tags:
        - Device Management
        - Device Configuration
      summary: Calibrate device rotation
      description: Initiates or checks the status of device rotation calibration for PTZ (Pan-Tilt-Zoom) cameras
      operationId: rotateCalibration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RotateCalibrationRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RotateCalibrationResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          description: Device not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /device/updateFloodlightSwitch:
    post:
      tags:
        - Device Management
        - Device Configuration
      summary: Update floodlight switch
      description: Updates the floodlight switch status (on/off) for a device with floodlight capability
      operationId: updateFloodlightSwitch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFloodlightSwitch'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          description: Device not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /device/updateFloodlightLuminance:
    post:
      tags:
        - Device Management
        - Device Configuration
      summary: Update floodlight luminance
      description: Updates the brightness level of a device's floodlight
      operationId: updateFloodlightLuminance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFloodlightLuminanceRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          description: Device not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  # Activity Zones Endpoints
  /device/insertactivityzone:
    post:
      tags:
        - Device Management
        - Activity Zones
      summary: Add activity zone
      description: Adds a new activity zone for a device camera
      operationId: addActivityZone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneAddEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneAddResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          description: Device not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /device/getactivityzone:
    post:
      tags:
        - Device Management
        - Activity Zones
      summary: Get activity zones
      description: Retrieves all activity zones defined for a specific device
      operationId: getActivityZones
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneGetEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneGetResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          description: Device not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /device/updateactivityzone:
    post:
      tags:
        - Device Management
        - Activity Zones
      summary: Update activity zone
      description: Updates an existing activity zone for a camera device
      operationId: updateActivityZone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneUpdateEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          description: Device or zone not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /device/deleteactivityzone:
    post:
      tags:
        - Device Management
        - Activity Zones
      summary: Delete activity zone
      description: Deletes an existing activity zone for a camera device
      operationId: deleteActivityZone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneDeleteEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          description: Device or zone not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  # Sleep/Dormancy Endpoints
  /device/dormancy/list:
    post:
      tags:
        - Device Management
        - Sleep Mode
      summary: List sleep plans
      description: Retrieves the list of sleep/dormancy plans for a device
      operationId: listDormancyPlans
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonSNRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SleepPlanResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          description: Device not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /device/dormancy/create:
    post:
      tags:
        - Device Management
        - Sleep Mode
      summary: Create sleep plan
      description: Creates a new sleep/dormancy plan for a device
      operationId: createDormancyPlan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceSleepPlanBean'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          description: Device not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /device/dormancy/edit:
    post:
      tags:
        - Device Management
        - Sleep Mode
      summary: Edit sleep plan
      description: Edits an existing sleep/dormancy plan for a device
      operationId: editDormancyPlan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceSleepPlanBean'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          description: Device not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /device/dormancy/delete:
    post:
      tags:
        - Device Management
        - Sleep Mode
      summary: Delete sleep plan
      description: Deletes an existing sleep/dormancy plan for a device
      operationId: deleteDormancyPlan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePlanCreateData'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          description: Device or plan not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /device/dormancy/switch:
    post:
      tags:
        - Device Management
        - Sleep Mode
      summary: Toggle sleep plan on/off
      description: Toggles the sleep/dormancy mode on or off for a specific device
      operationId: toggleDormancySwitch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SleepPlanData'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          description: Device not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  # Notification Settings Endpoints
  /usersetting/queryswitch:
    post:
      tags:
        - Notification Settings
      summary: Query merged push notification settings
      description: Retrieves the user's notification merge settings
      operationId: queryMergedNotificationSwitch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergePushResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /usersetting/switch:
    post:
      tags:
        - Notification Settings
      summary: Update merged push notification settings
      description: Updates the user's notification merge settings
      operationId: updateMergedNotificationSwitch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergePushEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /device/mechanical/dingdong/audition:
    post:
      tags:
        - Notification Settings
        - Doorbell Features
      summary: Test audition/doorbell sound
      description: Triggers a test sound for the mechanical chime feature on compatible doorbell devices
      operationId: testDoorbellSound
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonSNRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          description: Device not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  # AI Features Endpoints
  /aiAssist/queryEventObjectSwitch:
    post:
      tags:
        - AI Features
        - Event Detection
      summary: Query AI event detection settings
      description: Queries AI event object detection settings for devices
      operationId: queryEventObjectSwitch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AiEventEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiEventResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /aiAssist/updateEventObjectSwitch:
    post:
      tags:
        - AI Features
        - Event Detection
      summary: Update AI event detection settings
      description: Updates AI event detection settings for devices
      operationId: updateEventObjectSwitch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SwitchAiEventEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          description: Device not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /birdLovers/queryBirdAiSetting:
    post:
      tags:
        - AI Features
        - Bird Detection
      summary: Query bird AI settings
      description: Queries the bird detection AI settings for a specific camera device
      operationId: queryBirdAiSetting
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BirdAiQueryEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BirdAiResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          description: Device not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /birdLovers/updateBirdAiSetting:
    post:
      tags:
        - AI Features
        - Bird Detection
      summary: Update bird AI settings
      description: Updates bird detection AI settings for a specific camera device
      operationId: updateBirdAiSetting
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BirdAiUpdateEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          description: Device not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /device/queryMessageNotification/v1:
    post:
      tags:
        - AI Features
        - Notification Settings
      summary: Query person detection details
      description: Retrieves message notification settings and configuration for a specific device
      operationId: queryMessageNotification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageNotificationQueryEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageNotificationResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          description: Device not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /device/updateMessageNotification/v1:
    post:
      tags:
        - AI Features
        - Notification Settings
      summary: Update person detection settings
      description: Updates message notification settings for a specific device
      operationId: updateMessageNotification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageNotificationUpdateEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          description: Device not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  # VIP Management Endpoints
  /vip/device/cloud/info:
    post:
      tags:
        - VIP Management
      summary: Query device cloud service VIP info
      description: Queries VIP/subscription information for a specific device
      operationId: getDeviceCloudInfo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerialNoEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceCloudServiceResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '404':
          description: Device not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /vip/tier/list/v4:
    get:
      tags:
        - VIP Management
      summary: Get subscription tier list
      description: Retrieves available subscription tier options and product information
      operationId: getTierListV4
      parameters:
        - name: app.apiVersion
          in: query
          required: false
          schema:
            type: string
          description: API version
        - name: app.appName
          in: query
          required: false
          schema:
            type: string
          description: Application name
        - name: app.appType
          in: query
          required: false
          schema:
            type: string
          description: Application type
        - name: app.bundle
          in: query
          required: false
          schema:
            type: string
          description: Bundle identifier
        - name: app.countlyId
          in: query
          required: false
          schema:
            type: string
          description: Analytics ID
        - name: app.env
          in: query
          required: false
          schema:
            type: string
          description: Environment (e.g., "prod")
        - name: app.tenantId
          in: query
          required: false
          schema:
            type: string
          description: Tenant identifier
        - name: app.timeZone
          in: query
          required: false
          schema:
            type: string
          description: User's timezone
        - name: app.version
          in: query
          required: false
          schema:
            type: string
          description: App version number
        - name: app.versionName
          in: query
          required: false
          schema:
            type: string
          description: App version name
        - name: countryNo
          in: query
          required: false
          schema:
            type: string
          description: Country code
        - name: language
          in: query
          required: false
          schema:
            type: string
          description: User's language preference
        - name: tenantId
          in: query
          required: false
          schema:
            type: string
          description: User's tenant ID
        - name: tierServiceType
          in: query
          required: false
          schema:
            type: integer
            enum: [1]
          description: Service type (1 = 4G service tiers)
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TierListResponseV4'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /vip/user/service/info:
    post:
      tags:
        - VIP Management
      summary: Get VIP user service info
      description: Gets VIP user service subscription information and device allocation
      operationId: getUserServiceInfo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/BaseEntry'
                - $ref: '#/components/schemas/Vip4GRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VipServiceResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /vip/user/device/list:
    post:
      tags:
        - VIP Management
      summary: List devices with VIP status
      description: Lists devices with VIP status and their subscription tier positions
      operationId: getVipDeviceList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VipManagerResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /vip/user/rolling/day:
    post:
      tags:
        - VIP Management
      summary: Update user rolling day
      description: Updates a user's subscription billing cycle day
      operationId: updateUserRollingDay
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollingDayEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /vip/available/purchase/device:
    post:
      tags:
        - VIP Management
      summary: Get purchasable devices
      description: Gets a list of devices available for purchase with a specific subscription plan
      operationId: getPurchaseDevice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseDeviceResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  /user/queryFreeTier:
    post:
      tags:
        - VIP Management
      summary: Query free tier status
      description: Queries the user's free cloud storage tier status and limits
      operationId: queryFreeTier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreeTierResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
                
  # Payment Endpoints
  /pay/google/order/verify:
    post:
      tags:
        - Payment
      summary: Verify Google Pay order information
      description: Verifies Google Play subscription purchases and activates service
      operationId: uploadGooglePayInfo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayResultResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayResultResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayResultResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayResultResponse'
                
  # Account Management Endpoints
  /account/login:
    post:
      tags:
        - Account Management
      summary: Authenticate user
      description: |
        Authenticates users and provides access tokens for the API. 
        Users can log in using either email/password or phone/password combinations.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /account/logout/:
    post:
      tags:
        - Account Management
      summary: Terminate user session
      description: |
        Terminates a user's session and invalidates their authentication token. 
        It provides a secure way for users to sign out of the application.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /account/getipinfo:
    get:
      tags:
        - Account Management
      summary: Get IP address information
      description: |
        Retrieves information about the user's IP address and geographic location. 
        This information is used for region-specific settings, support routing, 
        and determining the appropriate API servers for the user's geographical location.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeInfoResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    # Core request/response objects that are used across multiple API groups
    BaseEntry:
      type: object
      properties:
        app:
          type: object
          properties:
            apiVersion:
              type: string
              description: API version
              example: "1.0"
            appName:
              type: string
              description: Application name
              example: "VicoHome"
            appType:
              type: string
              description: Application type identifier
              example: "android"
            bundle:
              type: string
              description: Bundle identifier
              example: "com.vicohome.app"
            countlyId:
              type: string
              description: Analytics ID
              example: "abc123"
            env:
              type: string
              description: Environment
              example: "prod"
            tenantId:
              type: string
              description: Tenant identifier
              example: "default"
            timeZone:
              type: string
              description: User's timezone
              example: "America/Los_Angeles"
            version:
              type: string
              description: Application version
              example: "1.2.3"
            versionName:
              type: string
              description: Application version name
              example: "1.2.3"
          required:
            - appType
            - version
        countryNo:
          type: string
          description: User's country code
          example: "US"
        language:
          type: string
          description: User's language preference
          example: "en"
        tenantId:
          type: string
          description: User's tenant ID
          example: "default"
      required:
        - app
        
    BaseResponse:
      type: object
      properties:
        code:
          type: string
          description: Response code
          example: "0"
        msg:
          type: string
          description: Response message
          example: "Success"
      required:
        - code
        
    # Device-specific schemas
    SerialNoEntry:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntry'
        - type: object
          properties:
            serialNumber:
              type: string
              description: The device's serial number
              example: "AB1234567"
            voiceReminder:
              type: boolean
              description: Optional parameter for voice reminders
              example: false
          required:
            - serialNumber
            
    AttributeModification:
      type: object
      properties:
        name:
          type: string
          description: Attribute name
          example: "pirSwitch"
        value:
          description: New value (type depends on attribute)
          example: true
      required:
        - name
        - value
        
    AttributesEntry:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntry'
        - type: object
          properties:
            serialNumber:
              type: string
              description: Device serial number
              example: "AB1234567"
            modifiableAttributes:
              type: array
              description: List of attributes to modify
              items:
                $ref: '#/components/schemas/AttributeModification'
          required:
            - serialNumber
            - modifiableAttributes
            
    RotateCalibrationRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntry'
        - type: object
          properties:
            serialNumber:
              type: string
              description: Device serial number
              example: "AB1234567"
            needCalibration:
              type: boolean
              description: true to start calibration, false to check status
              example: true
          required:
            - serialNumber
            - needCalibration
            
    RotateCalibrationResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                calibrationFinished:
                  type: boolean
                  description: Whether calibration has completed
                  example: false
                  
    UpdateFloodlightSwitch:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntry'
        - type: object
          properties:
            serialNumber:
              type: string
              description: Device serial number
              example: "AB1234567"
            switchOn:
              type: boolean
              description: True to turn on, false to turn off
              example: true
          required:
            - serialNumber
            - switchOn
            
    UpdateFloodlightLuminanceRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntry'
        - type: object
          properties:
            serialNumber:
              type: string
              description: Device serial number
              example: "AB1234567"
            luminance:
              type: integer
              description: Brightness level
              minimum: 1
              maximum: 100
              example: 75
          required:
            - serialNumber
            - luminance
            
    ZoneAddEntry:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntry'
        - type: object
          properties:
            serialNumber:
              type: string
              description: Device serial number
              example: "AB1234567"
            zoneName:
              type: string
              description: Name of the activity zone
              example: "Front Yard"
            vertices:
              type: string
              description: Coordinates that define the zone boundary as a polygon (comma-separated x,y pairs)
              example: "10,20,150,20,150,100,10,100"
            needAlarm:
              type: integer
              description: Flag to enable/disable alarm (0=disabled, 1=enabled)
              enum: [0, 1]
              example: 1
            needPush:
              type: integer
              description: Flag to enable/disable push notifications
              enum: [0, 1]
              example: 1
            needRecord:
              type: integer
              description: Flag to enable/disable recording for events
              enum: [0, 1]
              example: 1
            requestId:
              type: string
              description: Request identifier for tracking
              example: "request-123456"
          required:
            - serialNumber
            - zoneName
            - vertices
            - needAlarm
            - needPush
            - needRecord
            
    ZoneAddResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                id:
                  type: integer
                  description: ID of the newly created activity zone
                  example: 12345
                  
    ZoneGetEntry:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntry'
        - type: object
          properties:
            serialNumber:
              type: string
              description: Device serial number
              example: "AB1234567"
            language:
              type: string
              description: User language preference
              example: "en"
            requestId:
              type: string
              description: Request identifier for tracking
              example: "request-123456"
          required:
            - serialNumber
            
    ZoneGetResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                list:
                  type: array
                  description: Array of activity zones
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: Zone ID
                        example: 12345
                      serialNumber:
                        type: string
                        description: Device serial number
                        example: "AB1234567"
                      zoneName:
                        type: string
                        description: Custom name of the zone
                        example: "Front Yard"
                      zoneNameId:
                        type: integer
                        description: Zone name identifier
                        example: 0
                      vertices:
                        type: string
                        description: Coordinates defining the zone boundaries
                        example: "10,20,150,20,150,100,10,100"
                      needPush:
                        type: integer
                        description: Push notification setting (0=disabled, 1=enabled)
                        enum: [0, 1]
                        example: 1
                      needAlarm:
                        type: integer
                        description: Alarm setting (0=disabled, 1=enabled)
                        enum: [0, 1]
                        example: 1
                      needRecord:
                        type: integer
                        description: Recording setting (0=disabled, 1=enabled)
                        enum: [0, 1]
                        example: 1
                      modelCategory:
                        type: integer
                        description: Device model category
                        example: 1
                      deviceName:
                        type: string
                        description: Name of the device
                        example: "Front Door Camera"
                        
    ZoneUpdateEntry:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntry'
        - type: object
          properties:
            id:
              type: integer
              description: Zone ID to update
              example: 12345
            serialNumber:
              type: string
              description: Device serial number
              example: "AB1234567"
            zoneName:
              type: string
              description: Name of the activity zone
              example: "Front Yard"
            vertices:
              type: string
              description: Coordinates that define the zone boundary as a polygon
              example: "10,20,150,20,150,100,10,100"
            needAlarm:
              type: integer
              description: Flag to enable/disable alarm (0=disabled, 1=enabled)
              enum: [0, 1]
              example: 1
            needPush:
              type: integer
              description: Flag to enable/disable push notifications
              enum: [0, 1]
              example: 1
            needRecord:
              type: integer
              description: Flag to enable/disable recording for events
              enum: [0, 1]
              example: 1
            language:
              type: string
              description: User's language preference
              example: "en"
            requestId:
              type: string
              description: Request identifier for tracking
              example: "request-123456"
          required:
            - id
            - serialNumber
            - zoneName
            - vertices
            - needAlarm
            - needPush
            - needRecord
            
    ZoneDeleteEntry:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntry'
        - type: object
          properties:
            id:
              type: integer
              description: Zone ID to delete
              example: 12345
            serialNumber:
              type: string
              description: Device serial number
              example: "AB1234567"
            language:
              type: string
              description: User's language preference
              example: "en"
            requestId:
              type: string
              description: Request identifier for tracking
              example: "request-123456"
          required:
            - id
            - serialNumber
            
    CommonSNRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntry'
        - type: object
          properties:
            serialNumber:
              type: string
              description: Device serial number
              example: "AB1234567"
          required:
            - serialNumber
            
    SleepPlan:
      type: object
      properties:
        serialNumber:
          type: string
          description: Device serial number
          example: "AB1234567"
        startHour:
          type: integer
          description: Hour when sleep mode starts (0-23)
          minimum: 0
          maximum: 23
          example: 22
        startMinute:
          type: integer
          description: Minute when sleep mode starts (0-59)
          minimum: 0
          maximum: 59
          example: 30
        endHour:
          type: integer
          description: Hour when sleep mode ends (0-23)
          minimum: 0
          maximum: 23
          example: 7
        endMinute:
          type: integer
          description: Minute when sleep mode ends (0-59)
          minimum: 0
          maximum: 59
          example: 0
        period:
          type: integer
          description: Period value (e.g., 1 for daily)
          example: 1
        planDay:
          type: integer
          description: Bitmask of days for the plan (127 = all days)
          example: 127
        planStartDay:
          type: array
          description: List of start days for the plan (1=Monday, 7=Sunday)
          items:
            type: integer
            minimum: 1
            maximum: 7
          example: [1, 2, 3, 4, 5, 6, 7]
      required:
        - serialNumber
        - startHour
        - startMinute
        - endHour
        - endMinute
        - period
        - planDay
            
    SleepPlanResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              description: List of sleep plans for the device
              items:
                $ref: '#/components/schemas/SleepPlan'
                
    DeviceSleepPlanBean:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntry'
        - type: object
          properties:
            serialNumber:
              type: string
              description: Device serial number
              example: "AB1234567"
            startHour:
              type: integer
              description: Start hour of sleep period (0-23)
              minimum: 0
              maximum: 23
              example: 22
            startMinute:
              type: integer
              description: Start minute of sleep period (0-59)
              minimum: 0
              maximum: 59
              example: 30
            endHour:
              type: integer
              description: End hour of sleep period (0-23)
              minimum: 0
              maximum: 23
              example: 7
            endMinute:
              type: integer
              description: End minute of sleep period (0-59)
              minimum: 0
              maximum: 59
              example: 0
            period:
              type: integer
              description: Identifier for this sleep plan
              example: 1
            planDay:
              type: integer
              description: Bitmask of days for the plan (127 = all days)
              example: 127
            planStartDay:
              type: array
              description: List of start days for the plan (1=Monday, 7=Sunday)
              items:
                type: integer
                minimum: 1
                maximum: 7
              example: [1, 2, 3, 4, 5, 6, 7]
          required:
            - serialNumber
            - startHour
            - startMinute
            - endHour
            - endMinute
            - period
            
    DeletePlanCreateData:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntry'
        - type: object
          properties:
            serialNumber:
              type: string
              description: Device serial number
              example: "AB1234567"
            period:
              type: integer
              description: The period identifier for the sleep plan to delete
              example: 1
          required:
            - serialNumber
            - period
            
    SleepPlanData:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntry'
        - type: object
          properties:
            serialNumber:
              type: string
              description: Device serial number
              example: "AB1234567"
            dormancySwitch:
              type: integer
              description: Sleep mode status (1 = on, 0 = off)
              enum: [0, 1]
              example: 1
          required:
            - serialNumber
            - dormancySwitch
            
    GetOtaStatusResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                serialNumber:
                  type: string
                  description: Device serial number
                  example: "AB1234567"
                inProgress:
                  type: integer
                  description: Flag indicating if update is in progress (0 or 1)
                  enum: [0, 1]
                  example: 1
                status:
                  type: integer
                  description: General status code
                  example: 0
                otaStatus:
                  type: integer
                  description: OTA specific status code (0=not started, 1=downloading, 2=installing, 3=completed, 4=failed, 5=timeout)
                  enum: [0, 1, 2, 3, 4, 5]
                  example: 1
                transferredSize:
                  type: integer
                  format: int64
                  description: Bytes transferred so far
                  example: 5242880
                totalSize:
                  type: integer
                  format: int64
                  description: Total bytes to transfer
                  example: 10485760
                targetFirmware:
                  type: string
                  description: Target firmware version
                  example: "v1.2.3"
                localDataProgress:
                  type: integer
                  description: Local data transfer progress
                  example: 50
                localDataStartTime:
                  type: integer
                  format: int64
                  description: Timestamp when local data transfer started (Unix time)
                  example: 1612345678
                  
    AllDeviceResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                devices:
                  type: array
                  items:
                    $ref: '#/components/schemas/Device'
    
    Device:
      type: object
      properties:
        serialNumber:
          type: string
          description: Device serial number
          example: "AB1234567"
        deviceName:
          type: string
          description: Name of the device
          example: "Front Door Camera"
        online:
          type: integer
          description: Online status (1 = online, 0 = offline)
          enum: [0, 1]
          example: 1
        deviceModel:
          type: string
          description: Model information
          example: "VicoHome Pro"
        batteryLevel:
          type: integer
          description: Battery level (percentage)
          minimum: 0
          maximum: 100
          example: 85
        sdCard:
          type: object
          properties:
            available:
              type: boolean
              description: Whether an SD card is available
              example: true
            totalSize:
              type: integer
              description: Total size of SD card in bytes
              example: 32000000000
            usedSize:
              type: integer
              description: Used size of SD card in bytes
              example: 12000000000
        thumbImgUrl:
          type: string
          description: Device thumbnail image URL
          example: "https://storage.vicohome.io/thumbnails/abc123.jpg"
        bindTime:
          type: integer
          description: Time when device was bound to account (Unix timestamp)
          example: 1609459200
        location:
          type: object
          properties:
            locationId:
              type: string
              description: Location identifier
              example: "home123"
            locationName:
              type: string
              description: Location name
              example: "Home"
        capabilities:
          type: array
          description: Device capabilities
          items:
            type: string
          example: ["motion_detection", "two_way_audio", "night_vision"]
        settings:
          type: object
          description: Device settings
          additionalProperties: true
          example:
            motionSensitivity: "medium"
            recordingLength: 30
      required:
        - serialNumber
        - deviceName
        - online

    GetSingleDeviceResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                serialNumber:
                  type: string
                  description: Device serial number
                  example: "AB1234567"
                deviceName:
                  type: string
                  description: Name of the device
                  example: "Front Door Camera"
                online:
                  type: integer
                  description: Device online status (0=offline, 1=online)
                  enum: [0, 1]
                  example: 1
                awake:
                  type: integer
                  description: Device awake status (0=sleep, 1=awake)
                  enum: [0, 1]
                  example: 1
                deviceStatus:
                  type: integer
                  description: Status code (3=sleep, 11=shutdown-low-power, 12=shutdown-press-key, 13=shutdown-solar-low-power)
                  example: 0
                batteryLevel:
                  type: integer
                  description: Battery level percentage
                  minimum: 0
                  maximum: 100
                  example: 85
                adminName:
                  type: string
                  description: Name of the admin user
                  example: "John Doe"
                adminPhone:
                  type: string
                  description: Phone number of the admin user
                  example: "+12025550123"
                adminId:
                  type: integer
                  description: ID of the admin user
                  example: 12345
                deviceModel:
                  type: object
                  properties:
                    modelName:
                      type: string
                      description: Model name
                      example: "VicoHome Pro"
                    canStandby:
                      type: boolean
                      description: Whether the device can enter standby mode
                      example: true
                    isCanRotate:
                      type: boolean
                      description: Whether the device can rotate
                      example: true
                    supportMotionTrack:
                      type: boolean
                      description: Whether the device supports motion tracking
                      example: true
                    whiteLight:
                      type: boolean
                      description: Whether the device has white light
                      example: true
                    streamProtocol:
                      type: string
                      description: Streaming protocol used
                      example: "RTSP"
                    audioCodecType:
                      type: string
                      description: Audio codec type
                      example: "AAC"
                sdCard:
                  type: object
                  properties:
                    formatStatus:
                      type: integer
                      description: SD card format status
                      example: 1
                    total:
                      type: integer
                      description: Total size of SD card in bytes
                      example: 32000000000
                    used:
                      type: integer
                      description: Used size of SD card in bytes
                      example: 12000000000
                signalStrength:
                  type: integer
                  description: WiFi signal strength
                  minimum: 0
                  maximum: 100
                  example: 85
                deviceSupport:
                  type: object
                  properties:
                    deviceSupportAlarm:
                      type: boolean
                      description: Whether the device supports alarms
                      example: true
                    deviceSupportMirrorFlip:
                      type: boolean
                      description: Whether the device supports mirror and flip
                      example: true
                    deviceDormancySupport:
                      type: integer
                      description: Level of dormancy support
                      example: 1
                    supportWebrtc:
                      type: integer
                      description: Level of WebRTC support
                      example: 1
                    supportRecordingAudioToggle:
                      type: integer
                      description: Whether recording audio toggle is supported
                      example: 1
                    supportLiveAudioToggle:
                      type: integer
                      description: Whether live audio toggle is supported
                      example: 1
                thumbImgUrl:
                  type: string
                  description: Thumbnail image URL
                  example: "https://storage.vicohome.io/thumbnails/abc123.jpg"
                thumbImgTime:
                  type: integer
                  format: int64
                  description: Timestamp of thumbnail image
                  example: 1609459200000

    DeviceThumbImageResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                type: object
                properties:
                  serialNumber:
                    type: string
                    description: Device serial number
                    example: "AB1234567"
                  lastPushImageUrl:
                    type: string
                    description: URL to the device's thumbnail image
                    example: "https://storage.vicohome.io/thumbnails/abc123.jpg"
                  lastPushTime:
                    type: integer
                    format: int64
                    description: Timestamp of when the image was last updated (Unix time)
                    example: 1612345678
                required:
                  - serialNumber
                  - lastPushImageUrl
                  - lastPushTime
                  
    DeviceAttributesRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntry'
        - type: object
          properties:
            serialNumber:
              type: string
              description: Device serial number
              example: "AB1234567"
            returnFixedAttributes:
              type: boolean
              description: Whether to include fixed attributes
              default: true
              example: true
            returnRealTimeAttributes:
              type: boolean
              description: Whether to include real-time attributes
              default: true
              example: true
            returnModifiableAttributes:
              type: boolean
              description: Whether to include modifiable attributes
              default: true
              example: true
          required:
            - serialNumber
            
    DeviceAttributesResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                serialNumber:
                  type: string
                  description: Device serial number
                  example: "AB1234567"
                fixedAttributes:
                  type: object
                  description: Attributes that cannot be changed and are fixed for the device model
                  properties:
                    canStandby:
                      type: integer
                      description: Whether the device can enter standby mode
                      example: 1
                    displayModelNo:
                      type: string
                      description: Display model number
                      example: "VicoHome Pro"
                    floodlightLuminanceRange:
                      type: object
                      description: Range for floodlight brightness
                      properties:
                        min:
                          type: integer
                          description: Minimum luminance value
                          example: 0
                        max:
                          type: integer
                          description: Maximum luminance value
                          example: 100
                        interval:
                          type: integer
                          description: Step size for luminance adjustment
                          example: 1
                    iccid:
                      type: string
                      description: SIM card ICCID if applicable
                      example: "89012345678901234567"
                    icon:
                      type: string
                      description: Large icon URL
                      example: "https://storage.vicohome.io/icons/device_large.png"
                    macAddress:
                      type: string
                      description: WiFi MAC address
                      example: "00:11:22:33:44:55"
                    modelCategory:
                      type: integer
                      description: Device model category code
                      example: 1
                    modelNo:
                      type: string
                      description: Model number
                      example: "VC-CAM-PRO-1"
                    quantityCharge:
                      type: boolean
                      description: Whether the device supports quantity charging
                      example: false
                    roleName:
                      type: string
                      description: Name of device role
                      example: "Camera"
                    smallIcon:
                      type: string
                      description: Small icon URL
                      example: "https://storage.vicohome.io/icons/device_small.png"
                    support12Hours:
                      type: boolean
                      description: Whether 12-hour time format is supported
                      example: true
                    supportIndoor:
                      type: boolean
                      description: Whether the device is suitable for indoor use
                      example: true
                    supportJson:
                      type: object
                      description: JSON of supported features
                      additionalProperties: true
                    supportManualFloodlightLuminance:
                      type: boolean
                      description: Whether manual floodlight brightness control is supported
                      example: true
                    supportManualFloodlightSwitch:
                      type: boolean
                      description: Whether manual floodlight switch is supported
                      example: true
                    supportOtaAutoUpgrade:
                      type: boolean
                      description: Whether automatic OTA upgrades are supported
                      example: true
                    supportPirAi:
                      type: boolean
                      description: Whether AI-enhanced motion detection is supported
                      example: true
                    wiredMacAddress:
                      type: string
                      description: Wired MAC address if applicable
                      example: "00:11:22:33:44:56"
                realTimeAttributes:
                  type: object
                  description: Attributes that represent the current state of the device
                  properties:
                    batteryLevel:
                      type: integer
                      description: Current battery level percentage
                      minimum: 0
                      maximum: 100
                      example: 85
                    isCharging:
                      type: integer
                      description: Whether the device is charging (0=no, 1=yes)
                      enum: [0, 1]
                      example: 0
                    chargingMode:
                      type: integer
                      description: Current charging mode
                      example: 0
                    deviceNetType:
                      type: integer
                      description: Network connection type
                      example: 1
                    deviceStatus:
                      type: integer
                      description: Current device status code
                      example: 0
                    firmwareId:
                      type: string
                      description: Current firmware ID
                      example: "v1.2.3"
                    firmwareStatus:
                      type: integer
                      description: Firmware update status
                      example: 0
                    ip:
                      type: string
                      description: IP address
                      example: "192.168.1.100"
                    newestFirmwareId:
                      type: string
                      description: Newest available firmware ID
                      example: "v1.2.4"
                    online:
                      type: integer
                      description: Online status (0=offline, 1=online)
                      enum: [0, 1]
                      example: 1
                    sdCard:
                      type: object
                      description: SD card information
                      properties:
                        formatStatus:
                          type: integer
                          description: SD card format status
                          example: 1
                        free:
                          type: integer
                          format: int64
                          description: Free space in bytes
                          example: 20000000000
                        total:
                          type: integer
                          format: int64
                          description: Total space in bytes
                          example: 32000000000
                        used:
                          type: integer
                          format: int64
                          description: Used space in bytes
                          example: 12000000000
                    signalStrength:
                      type: integer
                      description: WiFi signal strength
                      minimum: 0
                      maximum: 100
                      example: 85
                    whiteLight:
                      type: integer
                      description: White light status (0=off, 1=on)
                      enum: [0, 1]
                      example: 0
                modifiableAttributes:
                  type: array
                  description: Attributes that can be modified by the user
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: Attribute name
                        example: "pirSwitch"
                      type:
                        type: string
                        description: Attribute data type
                        enum: ["boolean", "int", "string", "enum"]
                        example: "boolean"
                      value:
                        description: Current attribute value (type depends on the 'type' field)
                        example: true
                      disabled:
                        type: boolean
                        description: Whether this attribute is currently disabled
                        example: false
                      disabledOptions:
                        type: array
                        description: Options that are disabled if this is an enum
                        items:
                          type: string
                        example: ["option1", "option3"]
                      intRange:
                        type: object
                        description: Range info if this is a numeric attribute
                        properties:
                          min:
                            type: integer
                            description: Minimum allowed value
                            example: 0
                          max:
                            type: integer
                            description: Maximum allowed value
                            example: 100
                          interval:
                            type: integer
                            description: Stepping interval
                            example: 1
                      options:
                        type: array
                        description: Available options if this is an enum type
                        items:
                          type: object
                          additionalProperties: true
                          
    # Location-specific schemas
    LocationInfo:
      type: object
      properties:
        id:
          type: integer
          description: Location ID
          example: 12345
        adminId:
          type: integer
          description: User ID of the admin
          example: 1001
        locationName:
          type: string
          description: Name of the location
          example: "Home"
        country:
          type: string
          description: Country
          example: "United States"
        state:
          type: string
          description: State/province
          example: "California"
        city:
          type: string
          description: City
          example: "San Francisco"
        district:
          type: string
          description: District
          example: "Mission District"
        streetAddress1:
          type: string
          description: Street address line 1
          example: "123 Main St"
        streetAddress2:
          type: string
          description: Street address line 2
          example: "Apt 4B"
        postalCode:
          type: string
          description: Postal/ZIP code
          example: "94105"
        insertTime:
          type: integer
          format: int64
          description: Creation timestamp (Unix time)
          example: 1609459200
      required:
        - id
        - locationName
        
    AllLocationResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              description: List of locations
              items:
                $ref: '#/components/schemas/LocationInfo'
                
    LocationEntry:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntry'
        - type: object
          properties:
            locationName:
              type: string
              description: Name of the location
              example: "Home"
            country:
              type: string
              description: Country where the location is situated
              example: "United States"
            state:
              type: string
              description: State/province
              example: "California"
            city:
              type: string
              description: City
              example: "San Francisco"
            district:
              type: string
              description: District/neighborhood
              example: "Mission District"
            streetAddress1:
              type: string
              description: Primary street address
              example: "123 Main St"
            streetAddress2:
              type: string
              description: Secondary address information (apt, suite, etc.)
              example: "Apt 4B"
            postalCode:
              type: string
              description: Postal/ZIP code
              example: "94105"
            adminId:
              type: integer
              description: Admin ID (if applicable)
              example: 1001
            id:
              type: integer
              description: ID value (usually 0 for new locations)
              default: 0
              example: 0
            insertTime:
              type: integer
              format: int64
              description: Time of insertion (usually 0, server will assign)
              default: 0
              example: 0
          required:
            - locationName
            
    LocationInsertResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/LocationInfo'
              
    UpdateLocationEntry:
      type: object
      allOf:
        - $ref: '#/components/schemas/LocationEntry'
        - type: object
          required:
            - id
            - locationName
            
    DeleteLocationEntry:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntry'
        - type: object
          properties:
            id:
              type: integer
              description: ID of the location to delete
              example: 12345
          required:
            - id
            
    DeviceBasicInfo:
      type: object
      properties:
        serialNumber:
          type: string
          description: Device serial number
          example: "AB1234567"
        deviceName:
          type: string
          description: Name of the device
          example: "Front Door Camera"
        online:
          type: integer
          description: Device online status (1 = online, 0 = offline)
          enum: [0, 1]
          example: 1
        deviceModel:
          type: string
          description: Model information
          example: "VicoHome Pro"
        batteryLevel:
          type: integer
          description: Battery level percentage
          minimum: 0
          maximum: 100
          example: 85
      required:
        - serialNumber
        - deviceName
            
    DeleteLocationResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                list:
                  type: array
                  description: Array of devices that were affected by the location deletion
                  items:
                    $ref: '#/components/schemas/DeviceBasicInfo'
                    
    # Notification-specific schemas
    MergePushResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                messageMergeSwitch:
                  type: string
                  description: Notification merge setting ("1" for enabled, "0" for disabled)
                  enum: ["0", "1"]
                  example: "1"
                userId:
                  type: string
                  description: The user's ID
                  example: "12345"
                  
    MergePushEntry:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntry'
        - type: object
          properties:
            messageMergeSwitch:
              type: integer
              description: Value to control message merging (1 to enable, 0 to disable)
              enum: [0, 1]
              example: 1
          required:
            - messageMergeSwitch
            
    # AI-specific schemas
    AiEventEntry:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntry'
        - type: object
          properties:
            isAll:
              type: boolean
              description: Whether to query all devices
              example: true
            serialNumbers:
              type: array
              description: Array of device serial numbers to query (used if isAll is false)
              items:
                type: string
                example: "AB1234567"
          required:
            - isAll
            
    AiEventResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              description: List of devices with their AI event detection settings
              items:
                type: object
                properties:
                  serialNumber:
                    type: string
                    description: Device serial number
                    example: "AB1234567"
                  deviceName:
                    type: string
                    description: Name of the device
                    example: "Front Door Camera" 
                  list:
                    type: array
                    description: List of event object detection settings
                    items:
                      $ref: '#/components/schemas/EventObjectSetting'
                      
    EventObjectSetting:
      type: object
      properties:
        eventObject:
          type: string
          description: Type of event object (e.g., "person", "vehicle", "pet", "package", "face")
          example: "person"
        checked:
          type: boolean
          description: Whether detection for this object type is enabled
          example: true
      required:
        - eventObject
        - checked
        
    SwitchAiEventEntry:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntry'
        - type: object
          properties:
            serialNumber:
              type: string
              description: Device serial number to update
              example: "AB1234567"
            list:
              type: array
              description: List of event objects to update
              items:
                $ref: '#/components/schemas/EventObjectSetting'
          required:
            - serialNumber
            - list
            
    BirdAiQueryEntry:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntry'
        - type: object
          properties:
            serialNumber:
              type: string
              description: Device serial number
              example: "AB1234567"
            reason:
              type: integer
              description: Reason for the query
              default: 0
              example: 0
          required:
            - serialNumber
            
    BirdAiResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                aiAnalyzeSwitch:
                  type: boolean
                  description: Whether AI bird analysis is enabled
                  example: true
                aiNotifySwitch:
                  type: boolean
                  description: Whether AI bird notifications are enabled
                  example: true
                  
    BirdAiUpdateEntry:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntry'
        - type: object
          properties:
            serialNumber:
              type: string
              description: Device serial number
              example: "AB1234567"
            aiAnalyzeSwitch:
              type: boolean
              description: Whether AI bird analysis is enabled
              example: true
            aiNotifySwitch:
              type: boolean
              description: Whether bird detection notifications are enabled
              example: true
          required:
            - serialNumber
            
    MessageNotificationQueryEntry:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntry'
        - type: object
          properties:
            serialNumber:
              type: string
              description: Device serial number
              example: "AB1234567"
            filterByAiAnalyze:
              type: boolean
              description: Whether to filter results by AI analysis capability
              example: true
            userId:
              type: integer
              description: User ID
              example: 12345
          required:
            - serialNumber
            
    NotificationEventType:
      type: object
      properties:
        name:
          type: string
          description: Event type name (e.g., "person", "vehicle", "pet", "package", "other")
          example: "person"
        choice:
          type: boolean
          description: Whether this event type is selected for notification
          example: true
        subEvent:
          type: array
          description: Optional sub-events for this event type
          items:
            type: object
            properties:
              name:
                type: string
                description: Sub-event name
                example: "face_detected"
              choice:
                type: boolean
                description: Whether this sub-event is selected for notification
                example: true
            required:
              - name
              - choice
      required:
        - name
        - choice
            
    MessageNotificationResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                list:
                  type: array
                  description: List of event types with notification settings
                  items:
                    $ref: '#/components/schemas/NotificationEventType'
                    
    MessageNotificationUpdateEntry:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntry'
        - type: object
          properties:
            serialNumber:
              type: string
              description: Device serial number
              example: "AB1234567"
            userId:
              type: integer
              description: User ID
              example: 12345
            eventObjectType:
              type: object
              description: Object containing notification settings for different detection types
              properties:
                person:
                  type: array
                  description: Person detection notification types to enable
                  items:
                    type: string
                    example: "face_detected"
                pet:
                  type: array
                  description: Pet detection notification types to enable
                  items:
                    type: string
                    example: "dog_detected"
                vehicle:
                  type: array
                  description: Vehicle detection notification types to enable
                  items:
                    type: string
                    example: "car_detected"
                other:
                  type: array
                  description: Other detection notification types to enable
                  items:
                    type: string
                    example: "motion_detected"
                package:
                  type: array
                  description: Package detection notification types to enable
                  items:
                    type: string
                    example: "package_delivered"
              required:
                - person
          required:
            - serialNumber
            - eventObjectType
            
    # VIP-specific schemas
    DeviceCloudServiceResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                endTime:
                  type: integer
                  format: int64
                  description: Subscription end time (Unix timestamp in seconds)
                  example: 1672531200
                freeLicenseId:
                  type: integer
                  description: Free license ID (if applicable)
                  example: 0
                hasVip:
                  type: boolean
                  description: Whether the device has an active VIP subscription
                  example: true
                tierList:
                  type: array
                  description: List of tiers/subscription options
                  items:
                    $ref: '#/components/schemas/SubscriptionTier'
                tierNameKey:
                  type: string
                  description: Name key of the subscription tier
                  example: "premium_tier"
                vipNotifyShow:
                  type: boolean
                  description: Whether to show VIP notifications
                  example: true
                vipTag:
                  type: integer
                  description: VIP tag value used to identify subscription type
                  example: 1
                  
    SubscriptionTier:
      type: object
      description: Subscription tier information
      properties:
        id:
          type: integer
          description: Tier ID
          example: 1
        name:
          type: string
          description: Tier name
          example: "Premium"
        features:
          type: array
          description: Features included in this tier
          items:
            type: string
          example: ["Cloud Storage", "AI Detection"]
          
    TierProduct:
      type: object
      description: Product information for a subscription tier
      properties:
        dayLookBack:
          type: integer
          description: Days of recording history available
          example: 30
        deviceNum:
          type: integer
          description: Number of devices included
          example: 1
        localBillingCycleDuration:
          type: integer
          description: Billing cycle duration
          example: 1
        localBillingCycleType:
          type: integer
          description: Billing cycle type (1=day, 2=month, 3=year)
          enum: [1, 2, 3]
          example: 2
        maxDeviceNum:
          type: integer
          description: Maximum devices allowed
          example: 1
        productId:
          type: integer
          description: Product ID
          example: 12345
        showInTier:
          type: boolean
          description: Whether shown in tier selection
          example: true
        subscriptionGroupId:
          type: string
          description: Subscription group
          example: "group_id"
        tierId:
          type: integer
          description: Tier ID
          example: 2
        currency:
          type: string
          description: Currency symbol
          example: "$"
        currentPrice:
          type: string
          description: Current price as string
          example: "9.99"
        priceMicro:
          type: integer
          format: int64
          description: Price in micro units (millionths)
          example: 9990000
        productName:
          type: string
          description: Product name
          example: "Cloud Standard"
        savePercentOfMontly:
          type: integer
          description: Percent saved vs monthly
          example: 0
        tierLevel:
          type: string
          description: Tier level
          example: "standard"
          
    FeatureDiff:
      type: object
      description: Feature difference between tiers
      properties:
        title:
          type: string
          description: Feature name
          example: "Video History"
        type:
          type: string
          description: Feature type
          example: "days"
        value:
          type: string
          description: Free tier value
          example: "1 day"
        vipValue:
          type: string
          description: Paid tier value
          example: "30 days"
          
    CopywriteDiff:
      type: object
      description: Feature comparison information
      properties:
        diffList:
          type: array
          description: Feature differences between tiers
          items:
            $ref: '#/components/schemas/FeatureDiff'
        isSubscribed:
          type: boolean
          description: Whether user is subscribed
          example: false
        storageDayCount:
          type: integer
          description: Storage days in free tier
          example: 1
        vipType:
          type: string
          description: Current VIP level
          example: "none"
          
    TierList:
      type: object
      description: Tier list with different pricing options
      properties:
        tierV1List:
          type: object
          description: Old tier structure (for backward compatibility)
          properties:
            monthlyProductList:
              type: array
              items:
                $ref: '#/components/schemas/TierProduct'
            yearlyProductList:
              type: array
              items:
                $ref: '#/components/schemas/TierProduct'
        tierV2List:
          type: object
          description: Current tier structure
          properties:
            monthlyProductList:
              type: array
              description: Monthly subscription options
              items:
                $ref: '#/components/schemas/TierProduct'
            yearlyProductList:
              type: array
              description: Yearly subscription options
              items:
                $ref: '#/components/schemas/TierProduct'
          
    TierListResponseV4:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                cloudFreeTrialDay:
                  type: integer
                  description: Free trial duration in days
                  example: 30
                commendProduct:
                  type: array
                  description: Recommended regular products
                  items:
                    $ref: '#/components/schemas/TierProduct'
                commendProduct4G:
                  type: array
                  description: Recommended 4G products
                  items:
                    $ref: '#/components/schemas/TierProduct'
                commendProduct4GHalfYearList:
                  type: array
                  description: 6-month 4G products
                  items:
                    $ref: '#/components/schemas/TierProduct'
                commendProduct4GYearList:
                  type: array
                  description: Annual 4G products
                  items:
                    $ref: '#/components/schemas/TierProduct'
                copywriteDiff:
                  $ref: '#/components/schemas/CopywriteDiff'
                hasBirdDevice:
                  type: boolean
                  description: Whether user has bird devices
                  example: false
                productExplain:
                  type: array
                  description: Explanatory text for products
                  items:
                    type: string
                  example: ["All prices include applicable taxes"]
                tierList:
                  $ref: '#/components/schemas/TierList'
                tierReceive:
                  type: boolean
                  description: Whether tier data was received
                  example: true
                tierReceive4G:
                  type: boolean
                  description: Whether 4G tier data was received
                  example: true
                  
    Vip4GRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntry'
        - type: object
          properties:
            tierServiceType:
              type: integer
              description: Service type (1 = 4G service tiers)
              enum: [1]
              example: 1
              
    VipDevice:
      type: object
      description: Device information with VIP status
      properties:
        deviceId:
          type: string
          description: Device identifier
          example: "5f7a8b9c1d2e3f4a"
        serialNumber:
          type: string
          description: Device serial number
          example: "AB1234567"
        deviceName:
          type: string
          description: Device name
          example: "Front Door Camera"
        deviceType:
          type: string
          description: Device type
          example: "doorbell"
        imageUrl:
          type: string
          description: Device image URL
          example: "https://storage.vicohome.io/images/device/AB1234567.jpg"
        isAdmin:
          type: boolean
          description: Whether user is admin for this device
          example: true
          
    AdditionalService:
      type: object
      description: Additional service information
      properties:
        name:
          type: string
          description: Service name
          example: "Extended Storage"
        description:
          type: string
          description: Service description
          example: "Additional cloud storage capacity"
          
    TierFeatureDescription:
      type: object
      description: Feature description for a subscription tier
      properties:
        title:
          type: string
          description: Feature title
          example: "Smart Detection"
        type:
          type: string
          description: Feature type
          example: "boolean"
        value:
          type: string
          description: Feature value
          example: "true"
          
    ActiveServiceDetails:
      type: object
      description: Details of currently active VIP service
      properties:
        activeDeviceList:
          type: array
          description: Devices active on this tier
          items:
            $ref: '#/components/schemas/VipDevice'
        tierNameKey:
          type: string
          description: Key for tier name localization
          example: "tier_premium"
        endTime:
          type: integer
          format: int64
          description: Subscription end time (milliseconds since epoch)
          example: 1648825200000
        maxDeviceNum:
          type: integer
          description: Maximum devices allowed
          example: 5
        tierId:
          type: integer
          description: Tier ID
          example: 3
        billingCycleType:
          type: integer
          description: Billing cycle type (1=day, 2=month, 3=year)
          enum: [1, 2, 3]
          example: 2
        billingCycleDuration:
          type: integer
          description: Billing cycle duration
          example: 1
          
    VipServiceResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                notInTierDeviceList:
                  type: array
                  description: Devices not included in the tier
                  items:
                    $ref: '#/components/schemas/VipDevice'
                notInTierDeviceThirdPartyList:
                  type: array
                  description: Third-party devices not in tier
                  items:
                    $ref: '#/components/schemas/VipDevice'
                outOfPlanKey:
                  type: string
                  description: Out-of-plan message key
                  example: "out_of_plan_warning"
                rollingDay:
                  type: integer
                  description: Billing day of month
                  example: 15
                serviceActiveDevice:
                  $ref: '#/components/schemas/ActiveServiceDetails'
                serviceAdditionList:
                  type: array
                  description: Additional services on subscription
                  items:
                    $ref: '#/components/schemas/AdditionalService'
                supportRollingDay:
                  type: array
                  description: Available billing day options
                  items:
                    type: integer
                  example: [1, 5, 10, 15, 20, 25]
                tierDescribeList:
                  type: array
                  description: Feature descriptions for tier
                  items:
                    $ref: '#/components/schemas/TierFeatureDescription'
                userVipId:
                  type: integer
                  description: User VIP identifier
                  example: 12345
                  
    VipDeviceDetails:
      type: object
      description: Detailed device information with VIP status
      properties:
        serialNumber:
          type: string
          description: Device serial number
          example: "AB1234567"
        deviceName:
          type: string
          description: Device name
          example: "Front Door Camera"
        deviceStatus:
          type: integer
          description: Device status code
          example: 1
        online:
          type: integer
          description: Online status (1=online, 0=offline)
          enum: [0, 1]
          example: 1
        icon:
          type: string
          description: Device icon URL
          example: "https://example.com/icon.png"
        tierName:
          type: string
          description: Tier name device belongs to
          example: "Premium"
        isAdmin:
          type: boolean
          description: Whether user is admin for this device
          example: true
        deviceType:
          type: string
          description: Device type identifier
          example: "doorbell"
        deviceStorageType:
          type: integer
          description: Storage type for device (cloud vs local)
          example: 1
          
    VipManagerTier:
      type: object
      description: Subscription tier information with associated devices
      properties:
        tierId:
          type: integer
          description: Tier ID
          example: 3
        tierName:
          type: string
          description: Tier name
          example: "Premium"
        tierNameKey:
          type: string
          description: Tier name localization key
          example: "premium"
        maxDeviceNum:
          type: integer
          description: Maximum devices allowed in tier
          example: 5
        activeDeviceList:
          type: array
          description: Devices in this tier
          items:
            $ref: '#/components/schemas/VipDeviceDetails'
        supportDeviceSnList:
          type: array
          description: List of supported device serial numbers
          items:
            type: string
          example: ["AB1234567", "CD7654321"]
        customSupportAllDevice:
          type: boolean
          description: Whether all devices are supported
          example: false
          
    VipManagerResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              description: List of VIP manager tiers
              items:
                $ref: '#/components/schemas/VipManagerTier'
                
    RollingDayEntry:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntry'
        - type: object
          properties:
            rollingDay:
              type: integer
              description: The day of month to set as billing day (1-31)
              minimum: 1
              maximum: 31
              example: 15
            userVipId:
              type: integer
              description: The user's VIP subscription ID
              example: 12345
          required:
            - rollingDay
            - userVipId
    
    ProductEntry:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntry'
        - type: object
          properties:
            productId:
              type: integer
              description: The subscription product ID to query
              example: 12345
          required:
            - productId
            
    PurchaseDeviceItem:
      type: object
      description: Information about a device available for purchase
      properties:
        canChoose:
          type: boolean
          description: Whether the device can be selected
          example: true
        deviceName:
          type: string
          description: Device name
          example: "Front Door Camera"
        icon:
          type: string
          description: Device icon URL
          example: "https://example.com/icon.png"
        isCheckout:
          type: boolean
          description: Whether device is pre-selected
          example: true
        serialNumber:
          type: string
          description: Device serial number
          example: "ABCD1234"
        deviceType:
          type: string
          description: Device type identifier
          example: "doorbell"
            
    PurchaseDeviceResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                allSimThirdParty:
                  type: boolean
                  description: Whether all devices are sim third-party devices
                  example: false
                availableForPurchase:
                  type: boolean
                  description: Whether any devices are available for purchase
                  example: true
                deviceList:
                  type: array
                  description: List of devices available for selection
                  items:
                    $ref: '#/components/schemas/PurchaseDeviceItem'
                    
    FreeTierResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                effectTime:
                  type: integer
                  format: int64
                  description: Unix timestamp when free tier began
                  example: 1639036800
                endTime:
                  type: integer
                  format: int64
                  description: Unix timestamp when free tier expires
                  example: 1670572800
                rollingDays:
                  type: integer
                  description: Number of days recordings are kept
                  example: 7
                storage:
                  type: integer
                  format: int64
                  description: Storage space in bytes
                  example: 1073741824
                valid:
                  type: boolean
                  description: Whether the free tier is currently valid
                  example: true
                  
    # Payment-specific schemas
    OrderEntry:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntry'
        - type: object
          properties:
            productId:
              type: integer
              description: Subscription product ID being purchased
              example: 12345
            purchaseToken:
              type: string
              description: Token from Google Play for verification
              example: "abcdefghijklmnopqrstuvwxyz"
            subscriptionGroupId:
              type: string
              description: ID of the subscription group
              example: "premium_group_1"
            outTradeNo:
              type: string
              description: Google's order ID for the transaction
              example: "GPA.1234-5678-9012-34567"
            guidanceSource:
              type: integer
              description: Source of purchase flow (e.g., 1=device detail, 2=account)
              example: 1
              enum: [1, 2]
            tradeType:
              type: integer
              description: Type of transaction (1=one-time, 2=subscription)
              example: 2
              enum: [1, 2]
            tierDeviceList:
              type: array
              description: List of device serial numbers selected for subscription
              items:
                type: string
              example: ["SN12345678", "SN87654321"]
          required:
            - productId
            - purchaseToken
            - subscriptionGroupId
            - outTradeNo
            - guidanceSource
            - tradeType
            - tierDeviceList
            
    PayResultResponse:
      type: object
      description: Payment verification result
      properties:
        result:
          type: integer
          description: Result code (0 indicates success)
          example: 0
        msg:
          type: string
          description: Response message
          example: "Success"
        data:
          type: string
          description: Additional response data (usually empty or confirmation token)
          example: ""
      required:
        - result
        
    # Account-specific schemas
    AccountEntry:
      type: object
      description: Login request parameters
      properties:
        email:
          type: string
          format: email
          description: User's email address for email-based authentication
          example: "user@example.com"
        password:
          type: string
          format: password
          description: User's password for email-based authentication
          example: "password123"
        loginType:
          type: integer
          description: |
            Type of login:
            - 0: Email/password login
          enum: [0, 1]
          default: 0
          example: 0
      oneOf:
        - required: [email, password, loginType]
    
    LoginResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: Response code (0 means success)
        data:
          type: object
          properties:
            token:
              type: string
              description: Authentication token for subsequent API calls
            refreshtoken:
              type: string
              description: Token used to refresh the authentication token
            userInfo:
              type: object
              properties:
                userID:
                  type: string
                  description: Unique identifier for the user
                nickname:
                  type: string
                  description: User's display name
                avatar:
                  type: string
                  description: URL to the user's profile picture
            timestamp:
              type: integer
              description: Server timestamp of when the token was issued
        message:
          type: string
          example: "Success"
          description: Response message
      required:
        - code
        - data
        - message

    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          example: 400
          description: Error code
        message:
          type: string
          example: "Invalid request parameters"
          description: Error message describing what went wrong
      required:
        - code
        - message
        
    NodeInfoResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: Response code (0 means success)
        data:
          type: object
          properties:
            countryCode:
              type: string
              example: "US"
              description: ISO country code of the detected IP location
            ip:
              type: string
              description: User's IP address as seen by the server
        message:
          type: string
          example: "Success"
          description: Response message
      required:
        - code
        - data
        - message    # Library Management Schemas
    LibraryFeedbackSubmitEntry:
      type: object
      description: Request parameters for submitting feedback about a library recording
      required:
        - traceId
        - userId
        - codes
      properties:
        traceId:
          type: string
          description: The trace ID of the recording being given feedback on
          example: "20220412150322_ABC123456789"
        userId:
          type: integer
          description: User ID submitting the feedback
          example: 123456
        codes:
          type: array
          description: Array of feedback reason codes selected by the user
          items:
            type: integer
          example: [101, 203]
        remark:
          type: string
          description: Additional user comments/feedback
          example: "The detection missed a person at the edge of the frame"
        app:
          type: object
          properties:
            type:
              type: string
              description: Application type identifier
              example: "android"
            version:
              type: string
              description: Application version
              example: "1.2.3"
        countryNo:
          type: string
          description: User's country code
          example: "US"
        language:
          type: string
          description: User's language preference
          example: "en"
        tenantId:
          type: string
          description: User's tenant ID
          
    DeleteRecordEntry:
      type: object
      description: Request parameters for deleting recordings
      required:
        - traceIdList
      properties:
        traceIdList:
          type: array
          description: List of recording IDs (trace IDs) to delete
          items:
            type: string
          example: ["trace123", "trace456", "trace789"]
        token:
          type: string
          description: Authentication token (optional, usually sent in headers)
          
    LibraryDeleteRecordResponse:
      type: object
      properties:
        result:
          type: integer
          description: Result code (0 for success)
          example: 0
        msg:
          type: string
          description: Message describing the result
          example: "Success"
        data:
          type: object
          description: Data object containing deletion details
      required:
        - result
        - msg
    
    FilterEntry:
      type: object
      description: Request parameters for filtering library recordings
      properties:
        serialNumber:
          type: array
          description: List of device serial numbers to filter by
          items:
            type: string
          example: ["ABC123456789"]
        startTimestamp:
          type: integer
          format: int64
          description: Start time in milliseconds since epoch
          example: 1649764800000
        endTimestamp:
          type: integer
          format: int64
          description: End time in milliseconds since epoch
          example: 1649851200000
        from:
          type: integer
          description: Pagination start index
          example: 0
        to:
          type: integer
          description: Pagination end index
          example: 20
        tags:
          type: array
          description: Filter by specific event tags
          items:
            type: string
          example: ["motion"]
        objectNames:
          type: array
          description: Filter by detected object types
          items:
            type: string
          example: ["person", "vehicle"]
        marked:
          type: integer
          description: Filter by marked status (0=unmarked, 1=marked)
          enum: [0, 1]
          example: 0
        missing:
          type: integer
          description: Filter by read status (0=read, 1=unread)
          enum: [0, 1]
          example: 0
        isFromSDCard:
          type: boolean
          description: Whether to fetch from SD card storage
          example: false
        serialNumberToActivityZone:
          type: object
          description: Filter by activity zones for specific devices
          additionalProperties:
            type: array
            items:
              type: integer
          example: {"ABC123456789": [1, 2]}
        videoEventKey:
          type: string
          description: Filter by specific video event key
          example: "motion_detection"
        doorbellTags:
          type: array
          description: Filter by doorbell specific tags
          items:
            type: string
          example: ["button_press"]
        deviceCallEventTag:
          type: string
          description: Filter by device call event tag
          example: "call_start"
        deviceName:
          type: string
          description: Filter by device name
          example: "Front Door Camera"
          
    EventDetailResponse:
      type: object
      properties:
        result:
          type: integer
          description: Result code (0 for success)
          example: 0
        msg:
          type: string
          description: Message describing the result
          example: "success"
        data:
          type: object
          properties:
            total:
              type: integer
              description: Total number of records matching the filter criteria
              example: 42
            list:
              type: array
              description: List of event records
              items:
                $ref: '#/components/schemas/EventRecord'
      required:
        - result
        - msg
        
    EventRecord:
      type: object
      description: Record of a single event in the library
      properties:
        traceId:
          type: string
          description: Unique identifier for the recording
          example: "20220412150322_ABC123456789"
        serialNumber:
          type: string
          description: Device serial number
          example: "ABC123456789"
        deviceName:
          type: string
          description: Name of the device
          example: "Front Door Camera"
        timestamp:
          type: integer
          description: Event timestamp in seconds since epoch
          example: 1649764800
        date:
          type: string
          description: Formatted date string
          example: "2022-04-12 15:03:22"
        videoUrl:
          type: string
          description: URL to the video recording
          example: "https://storage.vicohome.io/videos/20220412150322_ABC123456789.mp4"
        imageUrl:
          type: string
          description: URL to the event thumbnail image
          example: "https://storage.vicohome.io/images/20220412150322_ABC123456789.jpg"
        fileSize:
          type: integer
          description: Size of the recording file in bytes
          example: 1245678
        type:
          type: integer
          description: Event type code
          example: 1
        period:
          type: number
          format: double
          description: Recording duration in seconds
          example: 15.5
        tags:
          type: string
          description: Event tags
          example: "motion"
        marked:
          type: integer
          description: Whether the event is marked/favorited (0=no, 1=yes)
          enum: [0, 1]
          example: 0
        missing:
          type: integer
          description: Whether the event is unread (0=read, 1=unread)
          enum: [0, 1]
          example: 0
        userId:
          type: integer
          description: User ID
          example: 12345
        userName:
          type: string
          description: User name
          example: "user@example.com"
        adminId:
          type: integer
          description: Admin ID
          example: 12345
        adminName:
          type: string
          description: Admin name
          example: "user@example.com"
        adminIsVip:
          type: boolean
          description: Whether the admin has VIP subscription
          example: true
        locationId:
          type: integer
          description: ID of the location
          example: 6789
        locationName:
          type: string
          description: Name of the location
          example: "Home"
        timeZone:
          type: integer
          description: Timezone offset in minutes
          example: -300
        dst:
          type: integer
          description: Daylight saving time adjustment
          example: 1
        timeFormat:
          type: integer
          description: Time format preference (12/24 hour)
          enum: [12, 24]
          example: 12
        activityZoneName:
          type: string
          description: Name of the triggered activity zone
          example: "Driveway"
        role:
          type: string
          description: User role
          example: "owner"
        mediaType:
          type: string
          description: Type of media
          enum: ["video", "image"]
          example: "video"
        imageOnly:
          type: integer
          description: Indicates if only image is available
          enum: [0, 1]
          example: 0
        deviceAiEventList:
          type: array
          description: List of AI detection events
          items:
            type: string
          example: ["person", "vehicle"]
        eventInfoList:
          type: array
          description: Additional event information
          items:
            type: string
          example: ["Person detected"]
        hasPossibleSubcategory:
          type: boolean
          description: Whether subcategories exist for this event
          example: true
        subcategoryInfoList:
          type: array
          description: List of object subcategory information
          items:
            $ref: '#/components/schemas/SubcategoryInfo'
            
    SubcategoryInfo:
      type: object
      description: Information about detected object subcategories
      properties:
        objectName:
          type: string
          description: Name of the detected object
          example: "person"
        url:
          type: string
          description: Image URL for the detected object
          example: "https://storage.vicohome.io/ai/person/20220412150322_ABC123456789.jpg"
        birdStdName:
          type: string
          description: Standard name (for bird detection)
          example: "Robin"
          
    LibraryRecordEventResponse:
      type: object
      description: Response containing a list of event recordings
      properties:
        result:
          type: integer
          description: Result code (0 for success)
          example: 0
        msg:
          type: string
          description: Message describing the result
          example: "success"
        data:
          type: object
          properties:
            eventList:
              type: array
              description: List of event recordings
              items:
                $ref: '#/components/schemas/RecordingEvent'
            totalCount:
              type: integer
              description: Total count of matching recordings
              example: 42
            hasMore:
              type: boolean
              description: Indicates if more recordings are available
              example: true
      required:
        - result
        - msg
        
    RecordingEvent:
      type: object
      description: Information about a single recording event
      properties:
        deviceSn:
          type: string
          description: Device serial number
          example: "ABC123456789"
        deviceName:
          type: string
          description: Device name
          example: "Front Door Camera"
        readStatus:
          type: integer
          description: Read status (0=read, 1=unread)
          enum: [0, 1]
          example: 0
        traceId:
          type: string
          description: Unique trace ID
          example: "20220412150322_ABC123456789"
        thumbnail:
          type: string
          description: Thumbnail image URL
          example: "https://storage.vicohome.io/images/20220412150322_ABC123456789.jpg"
        timestamp:
          type: integer
          format: int64
          description: Event timestamp in milliseconds since epoch
          example: 1649764800000
        eventType:
          type: integer
          description: Event type code
          example: 1
        marked:
          type: integer
          description: Marked status (0=unmarked, 1=marked)
          enum: [0, 1]
          example: 0
        tags:
          type: array
          description: Array of event tags
          items:
            type: string
          example: ["motion"]
        objectNames:
          type: array
          description: Array of detected objects
          items:
            type: string
          example: ["person", "vehicle"]
        alertZone:
          type: integer
          description: Activity zone ID
          example: 2
        recordStatus:
          type: integer
          description: Recording status code
          example: 0
        fileSize:
          type: integer
          description: File size in bytes
          example: 1245678
        recordUrl:
          type: string
          description: Recording URL
          example: "https://storage.vicohome.io/videos/20220412150322_ABC123456789.mp4"
        recordLen:
          type: number
          format: double
          description: Recording length in seconds
          example: 15.5
        videoQuality:
          type: string
          description: Video quality
          example: "HD"
          
    TraceIdEntry:
      type: object
      description: Request parameters for retrieving a specific recording
      required:
        - traceId
      properties:
        traceId:
          type: string
          description: Unique identifier for the recording
          example: "20220412150322_ABC123456789"
        app:
          type: object
          properties:
            type:
              type: string
              description: Application type identifier
              example: "android"
            version:
              type: string
              description: Application version
              example: "1.2.3"
        countryNo:
          type: string
          description: User's country code
          example: "US"
        language:
          type: string
          description: User's language preference
          example: "en"
        tenantId:
          type: string
          description: User's tenant ID
          
    SingleLibraryResponse:
      type: object
      description: Response containing details for a single recording
      properties:
        result:
          type: integer
          description: Result code (0 for success)
          example: 0
        msg:
          type: string
          description: Message describing the result
          example: "Success"
        data:
          $ref: '#/components/schemas/RecordBean'
      required:
        - result
        - msg
        
    LibraryStatusResponse:
      type: object
      description: Response containing status information about the recording library
      properties:
        result:
          type: integer
          description: Result code (0 for success)
          example: 0
        msg:
          type: string
          description: Message describing the result
          example: "Success"
        data:
          type: object
          properties:
            list:
              type: array
              description: List of status counts by date
              items:
                $ref: '#/components/schemas/DateCountItem'
      required:
        - result
        - msg
        
    DateCountItem:
      type: object
      description: Recording count for a specific date
      properties:
        count:
          type: integer
          description: Number of recordings for this date
          example: 12
        dateTimestamp:
          type: integer
          description: Date timestamp in Unix seconds (not milliseconds)
          example: 1649721600
          
    LibraryOptionRequest:
      type: object
      description: Request parameters for querying video search options
      properties:
        SN:
          type: string
          description: Device serial number
          example: "ABC123456789"
        isFromSDCard:
          type: boolean
          description: Whether to query from SD card storage instead of cloud
          example: false
          
    LibraryOptionRequestBySn:
      type: object
      description: Request parameters for querying video search options by serial number
      required:
        - sn
      properties:
        sn:
          type: string
          description: Device serial number
          example: "ABC123456789"
        app:
          type: object
          properties:
            apiVersion:
              type: string
              description: API version
              example: "1.0"
            appName:
              type: string
              description: Application name
              example: "VicoHome"
            appType:
              type: string
              description: Application type
              example: "android"
            bundle:
              type: string
              description: Application bundle identifier
              example: "com.vicoo.vicohome"
            countlyId:
              type: string
              description: Analytics ID
            env:
              type: string
              description: Environment
              example: "prod"
            tenantId:
              type: string
              description: Tenant ID
            timeZone:
              type: string
              description: User's timezone
              example: "America/New_York"
            version:
              type: string
              description: Application version
              example: "1.2.3"
            versionName:
              type: string
              description: Application version name
              example: "1.2.3"
        countryNo:
          type: string
          description: Country code
          example: "US"
        language:
          type: string
          description: User's language preference
          example: "en"
        tenantId:
          type: string
          description: User's tenant ID
          
    VideoSearchOptionResponse:
      type: object
      description: Response containing available video search filter options
      properties:
        result:
          type: integer
          description: Result code (0 for success)
          example: 0
        msg:
          type: string
          description: Message describing the result
          example: "Success"
        data:
          $ref: '#/components/schemas/TagBean'
      required:
        - result
        - msg
        
    TagBean:
      type: object
      description: Container for various search filter options
      properties:
        aiEventTags:
          type: array
          description: List of AI event filter tags
          items:
            $ref: '#/components/schemas/TagItem'
          example: [{"name": "person", "subTags": []}, {"name": "vehicle", "subTags": []}]
        deviceEventTags:
          type: array
          description: List of device event filter tags
          items:
            $ref: '#/components/schemas/TagItem'
          example: [{"name": "motion", "subTags": []}, {"name": "sound", "subTags": []}]
        operateOptions:
          type: array
          description: List of operation filter tags
          items:
            $ref: '#/components/schemas/TagItem'
          example: [{"name": "marked", "subTags": []}, {"name": "unread", "subTags": []}]
        devices:
          type: array
          description: List of available devices
          items:
            $ref: '#/components/schemas/DeviceInfo'
          
    TagItem:
      type: object
      description: Information about a filter tag
      properties:
        name:
          type: string
          description: Tag name
          example: "person"
        subTags:
          type: array
          description: Optional sub-tags
          items:
            $ref: '#/components/schemas/TagItem'
          
    DeviceInfo:
      type: object
      description: Information about a device for filtering
      properties:
        serialNumber:
          type: string
          description: Device serial number
          example: "ABC123456789"
        deviceName:
          type: string
          description: Device name
          example: "Front Door Camera"
        isBind:
          type: boolean
          description: Whether device is bound to user
          example: true
        modelCategory:
          type: integer
          description: Device model category
          example: 1
        roleId:
          type: integer
          description: User role for device (1 = admin)
          example: 1
          
    SetMarkEntry:
      type: object
      description: Request parameters for setting mark status of recordings
      required:
        - marked
      properties:
        marked:
          type: integer
          description: Status to set (1 = mark, 0 = unmark)
          enum: [0, 1]
          example: 1
        traceIds:
          type: string
          description: Comma-separated list of recording trace IDs to update
          example: "trace123,trace456,trace789"
        traceId:
          type: string
          description: Single trace ID to update (alternative to traceIds)
          example: "trace123"
        markIds:
          type: array
          description: List of trace IDs to update (alternative to traceIds)
          items:
            type: string
          example: ["trace123", "trace456", "trace789"]
          
    SetReadStatusEntry:
      type: object
      description: Request parameters for setting read status of recordings
      required:
        - missing
      properties:
        missing:
          type: integer
          description: Status to set (1 = read, 0 = unread)
          enum: [0, 1]
          example: 1
        traceIds:
          type: string
          description: Comma-separated list of recording trace IDs to update
          example: "trace123,trace456,trace789"
        traceId:
          type: string
          description: Single trace ID to update (alternative to traceIds)
          example: "trace123"
        app:
          type: object
          properties:
            type:
              type: string
              description: Application type identifier
              example: "android"
            version:
              type: string
              description: Application version
              example: "1.2.3"
        countryNo:
          type: string
          description: User's country code
          example: "US"
        language:
          type: string
          description: User's language preference
          example: "en"
        tenantId:
          type: string
          description: User's tenant ID
          
    RecordBean:
      type: object
      description: Detailed information about a single recording
      properties:
        traceId:
          type: string
          description: Unique identifier for the recording
          example: "20220412150322_ABC123456789"
        serialNumber:
          type: string
          description: Device serial number
          example: "ABC123456789"
        deviceName:
          type: string
          description: Device name
          example: "Front Door Camera"
        locationId:
          type: integer
          description: ID of the location
          example: 6789
        locationName:
          type: string
          description: Name of the location
          example: "Home"
        timestamp:
          type: integer
          description: Event timestamp in seconds since epoch
          example: 1649764800
        date:
          type: string
          description: Formatted date string
          example: "2022-04-12 15:03:22"
        type:
          type: integer
          description: Recording type code
          example: 1
        imageUrl:
          type: string
          description: URL to the event thumbnail image
          example: "https://storage.vicohome.io/images/20220412150322_ABC123456789.jpg"
        videoUrl:
          type: string
          description: URL to the video recording
          example: "https://storage.vicohome.io/videos/20220412150322_ABC123456789.mp4"
        period:
          type: number
          format: double
          description: Recording duration in seconds
          example: 15.5
        fileSize:
          type: integer
          description: Size of the recording file in bytes
          example: 1245678
        imageOnly:
          type: integer
          description: Indicates if only image is available (0=has video, 1=image only)
          enum: [0, 1]
          example: 0
        mediaType:
          type: string
          description: Type of media
          enum: ["video", "image"]
          example: "video"
        videoEvent:
          type: string
          description: Video event type
          example: "motion_detection"
        tags:
          type: string
          description: Event tags
          example: "motion"
        marked:
          type: integer
          description: Whether the event is marked/favorited (0=no, 1=yes)
          enum: [0, 1]
          example: 0
        missing:
          type: integer
          description: Whether the event is unread (0=read, 1=unread)
          enum: [0, 1]
          example: 0
        userId:
          type: integer
          description: User ID
          example: 12345
        userName:
          type: string
          description: User name
          example: "user@example.com"
        adminId:
          type: integer
          description: Admin ID
          example: 12345
        adminName:
          type: string
          description: Admin name
          example: "user@example.com"
        adminIsVip:
          type: boolean
          description: Whether the admin has VIP subscription
          example: true
        timeZone:
          type: integer
          description: Timezone offset in minutes
          example: -300
        timeFormat:
          type: integer
          description: Time format preference (12/24 hour)
          enum: [12, 24]
          example: 12
        dst:
          type: integer
          description: Daylight saving time adjustment
          example: 1
        activityZoneName:
          type: string
          description: Name of the triggered activity zone
          example: "Driveway"
        role:
          type: string
          description: User role
          example: "owner"
        deviceAiEventList:
          type: array
          description: List of AI detection events
          items:
            type: string
          example: ["person", "vehicle"]
        eventInfoList:
          type: array
          description: Additional event information
          items:
            type: string
          example: ["Person detected"]
        hasPossibleSubcategory:
          type: boolean
          description: Whether subcategories exist for this event
          example: true
        subcategoryInfoList:
          type: array
          description: List of object subcategory information
          items:
            $ref: '#/components/schemas/SubcategoryInfo'
        
    FilterTagListResponse:
      type: object
      description: Response containing a list of filter tags for library events
      properties:
        result:
          type: integer
          description: Result code (0 for success)
          example: 0
        msg:
          type: string
          description: Message describing the result
          example: "Success"
        data:
          type: object
          properties:
            otherTagNameList:
              type: array
              description: List of tag names for filtering events
              items:
                type: string
              example: ["person", "package", "vehicle", "pet", "motion", "doorbell"]
      required:
        - result
        - msg
        
    LibraryFeedbackEntry:
      type: object
      description: Request parameters for retrieving feedback options
      required:
        - traceId
        - userId
      properties:
        traceId:
          type: string
          description: The trace ID of the event/recording
          example: "20220412150322_ABC123456789"
        userId:
          type: integer
          description: The user's ID
          example: 123456
        codes:
          type: array
          description: Pre-selected option codes (when retrieving existing feedback)
          items:
            type: integer
          example: [101, 203]
        remark:
          type: string
          description: Custom feedback text
          example: "The detection missed a person at the edge of the frame"
        app:
          type: object
          properties:
            type:
              type: string
              description: Application type identifier
              example: "android"
            version:
              type: string
              description: Application version
              example: "1.2.3"
        countryNo:
          type: string
          description: User's country code
          example: "US"
        language:
          type: string
          description: User's language preference
          example: "en"
        tenantId:
          type: string
          description: User's tenant ID
          
    LibraryFeedbackResponse:
      type: object
      description: Response containing feedback options for a library event
      properties:
        result:
          type: integer
          description: Result code (0 for success)
          example: 0
        msg:
          type: string
          description: Message describing the result
          example: "Success"
        data:
          $ref: '#/components/schemas/FeedbackData'
      required:
        - result
        - msg
        
    FeedbackData:
      type: object
      description: Container for feedback data and options
      properties:
        userId:
          type: integer
          description: The user's ID
          example: 123456
        traceId:
          type: string
          description: The trace ID of the event/recording
          example: "20220412150322_ABC123456789"
        libraryId:
          type: string
          description: The library ID
          example: "lib123456"
        serialNumber:
          type: string
          description: The device serial number
          example: "ABC123456789"
        isFirst:
          type: boolean
          description: Whether this is the first feedback for this event
          example: true
        checkedCodes:
          type: array
          description: Previously selected feedback option codes
          items:
            type: integer
          example: [101, 203]
        options:
          type: array
          description: Available feedback options
          items:
            $ref: '#/components/schemas/FeedbackOption'
        remark:
          type: string
          description: Custom feedback text
          example: "The detection missed a person at the edge of the frame"
          
    FeedbackOption:
      type: object
      description: Information about a feedback option
      properties:
        code:
          type: integer
          description: Unique identifier for this option
          example: 101
        title:
          type: string
          description: Display text for the option
          example: "Detection inaccurate"
        checked:
          type: boolean
          description: Whether this option is selected
          example: false
        hasTag:
          type: boolean
          description: Whether this option has an additional tag
          example: false
        tag:
          type: string
          description: Optional tag text
          example: "High priority"
        childOptions:
          type: array
          description: Nested options (for hierarchical feedback)
          items:
            $ref: '#/components/schemas/FeedbackOption'
            
    LibraryPayBannerResponse:
      type: object
      description: Response containing payment promotion banner information
      properties:
        result:
          type: integer
          description: Result code (0 for success)
          example: 0
        msg:
          type: string
          description: Message describing the result
          example: "Success"
        data:
          type: object
          properties:
            notify:
              type: boolean
              description: Whether to show the banner
              example: true
            notifyCount:
              type: integer
              description: Value related to notification (days/GB)
              example: 7
            notifyMessage:
              type: string
              description: Banner message text to display
              example: "You have 7 days of recordings remaining. Upgrade to store more videos."
            notifyType:
              type: integer
              description: Type of notification (0=days, 1=GB)
              enum: [0, 1]
              example: 0
            slotName:
              type: string
              description: Banner slot identifier
              example: "library_banner_1"
            upgradeFreeBtn:
              type: string
              description: Text for the banner button
              example: "Upgrade Now"
            recommendProduct:
              type: object
              description: Information about the recommended subscription product
              properties:
                productId:
                  type: string
                  description: Product identifier
                  example: "sub_premium_monthly"
                name:
                  type: string
                  description: Product name
                  example: "Premium Plan"
                price:
                  type: string
                  description: Product price
                  example: "$5.99"
            recommendProductDO:
              type: object
              description: Detailed product recommendations
              properties:
                monthlyProduct:
                  type: object
                  description: Monthly subscription option
                  properties:
                    id:
                      type: string
                      description: Product ID
                      example: "sub_premium_monthly"
                    name:
                      type: string
                      description: Product name
                      example: "Premium Monthly"
                    price:
                      type: string
                      description: Product price
                      example: "$5.99"
                yearlyProduct:
                  type: object
                  description: Yearly subscription option
                  properties:
                    id:
                      type: string
                      description: Product ID
                      example: "sub_premium_yearly"
                    name:
                      type: string
                      description: Product name
                      example: "Premium Yearly"
                    price:
                      type: string
                      description: Product price
                      example: "$59.99"
            recommendProductV1:
              type: array
              description: List of recommended product options
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: Product ID
                    example: "sub_premium_monthly"
                  name:
                    type: string
                    description: Product name
                    example: "Premium Monthly"
                  price:
                    type: string
                    description: Product price
                    example: "$5.99"
      required:
        - result
        - msg    SerialNumberListEntry:
      type: object
      description: Request containing a list of device serial numbers
      required:
        - serialNumber
      properties:
        serialNumber:
          type: array
          description: List of device serial numbers
          items:
            type: string
          example: ["DEVICE_SN_1", "DEVICE_SN_2"]
        app:
          type: object
          properties:
            type:
              type: string
              description: Application type identifier
              example: "android"
            version:
              type: string
              description: Application version
              example: "1.2.3"
        countryNo:
          type: string
          description: User's country code
          example: "US"
        language:
          type: string
          description: User's language preference
          example: "en"
        tenantId:
          type: string
          description: User's tenant ID    BucketResponse:
      type: object
      properties:
        result:
          type: integer
          description: Result code (0 for success)
          example: 0
        msg:
          type: string
          description: Message describing the result
          example: "Success"
        data:
          type: object
          description: User tag attributes
          additionalProperties:
            type: object
          example: {
            "feature_flag_doorbell_pro": true,
            "experiment_new_ui": "variant_a",
            "promo_tier": "premium"
          }
      required:
        - result
        - msg