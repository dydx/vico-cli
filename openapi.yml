openapi: 3.0.0
info:
  title: Vicohome API
  description: API for Vicohome services
  version: 1.0.0
  contact:
    name: Vicohome Support
    url: https://vicohome.io/support
    email: support@vicohome.io

servers:
  - url: https://api-us.vicohome.io
    description: US Region API Server
  - url: https://api-eu.vicohome.io
    description: EU Region API Server
  - url: https://api-staging-us.vicohome.io
    description: US Staging API Server
  - url: https://api-staging-eu.vicohome.io
    description: EU Staging API Server

paths:
  /account/login:
    post:
      tags:
        - Account Management
      summary: Authenticate user
      description: |
        Authenticates users and provides access tokens for the API. 
        Users can log in using either email/password or phone/password combinations.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /account/logout/:
    post:
      tags:
        - Account Management
      summary: Terminate user session
      description: |
        Terminates a user's session and invalidates their authentication token. 
        It provides a secure way for users to sign out of the application.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /account/getipinfo:
    get:
      tags:
        - Account Management
      summary: Get IP address information
      description: |
        Retrieves information about the user's IP address and geographic location. 
        This information is used for region-specific settings, support routing, 
        and determining the appropriate API servers for the user's geographical location.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeInfoResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /device/insertactivityzone:
    post:
      tags:
        - Device Management
      summary: Add activity zone to a device
      description: |
        Creates a new activity zone for a device. Activity zones define specific areas 
        within a camera's view where motion detection and alerts should be active.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneBean'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneAddResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /device/deleteactivityzone:
    post:
      tags:
        - Device Management
      summary: Delete activity zone from a device
      description: |
        Deletes an existing activity zone from a device. This operation cannot be undone.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneDeleteEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /device/getactivityzone:
    post:
      tags:
        - Device Management
      summary: Get all activity zones for a device
      description: |
        Retrieves all configured activity zones for a specific device. Activity zones 
        are user-defined areas within a camera's field of view where motion detection and 
        alerts are active.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneGetEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneGetResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /device/updateactivityzone:
    post:
      tags:
        - Device Management
      summary: Update an existing activity zone
      description: |
        Modifies an existing activity zone for a device. Activity zones are user-defined 
        areas within a camera's field of view where motion detection and alerts are active.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneUpdateEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /birdLovers/queryBirdAiSetting:
    post:
      tags:
        - AI Features
      summary: Get bird detection settings
      description: |
        Retrieves the current bird detection analysis and notification settings for a specific 
        device. This allows users to check whether bird detection and related notifications are 
        enabled for compatible cameras.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SNEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiBirdResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /birdLovers/updateBirdAiSetting:
    post:
      tags:
        - AI Features
      summary: Update bird detection settings
      description: |
        Updates the bird detection analysis and notification settings for a specific device. 
        This enables users to control whether bird detection is active and whether they receive 
        notifications for detected birds.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AiBirdUpdateEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /device/updateFloodlightSwitch:
    post:
      tags:
        - Device Management
      summary: Control device floodlight
      description: |
        Controls the floodlight (turn on/off) for compatible devices. 
        This provides remote control of the device's illumination feature.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFloodlightSwitch'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /device/updateFloodlightLuminance:
    post:
      tags:
        - Device Management
      summary: Adjust floodlight brightness
      description: |
        Adjusts the brightness level of a device's floodlight. 
        This provides fine-grained control over the illumination intensity for compatible devices.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFloodlightLuminanceRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /location/insertlocation/:
    post:
      tags:
        - Location Management
      summary: Create a new location
      description: |
        Creates a new location entry in the system. Locations are used to organize 
        devices geographically, helping users manage devices across multiple sites.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddLocationResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /cationcation/deletelocation:
    post:
      tags:
        - Location Management
      summary: Delete a location
      description: |
        Removes a location from the system. When a location is deleted, any devices 
        associated with that location may be reassigned or have their location information updated.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteLocationEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLocationResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /device/mechanical/dingdong/audition:
    post:
      tags:
        - Device Management
      summary: Test doorbell audio
      description: |
        Triggers a doorbell's chime to play a test sound. This allows users to 
        verify the doorbell's audio functionality and adjust volume settings accordingly.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonSNRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /device/dormancy/create:
    post:
      tags:
        - Device Management
      summary: Create device sleep schedule
      description: |
        Creates a new sleep schedule for a device. Sleep plans allow users to define 
        specific time periods during which the device will enter a low-power state, 
        reducing notifications and conserving energy.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceSleepPlanBean'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /device/dormancy/delete:
    post:
      tags:
        - Device Management
      summary: Delete device sleep schedule
      description: |
        Deletes an existing sleep schedule for a device. This allows users to 
        remove specific sleep plans that are no longer needed, reverting the device 
        to its normal operational state during those time periods.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSleepPlanEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /device/devicePushImage:
    post:
      tags:
        - Device Management
      summary: Get device thumbnail images
      description: |
        Retrieves thumbnail images for cameras associated with the user's account.
        These images represent the most recent snapshot from each camera and are 
        typically used for device preview in dashboard views.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceThumbImageResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /device/dormancy/edit:
    post:
      tags:
        - Device Management
      summary: Edit device sleep plan
      description: |
        Updates an existing sleep schedule for a device. Sleep plans allow users to define 
        specific time periods during which the device will enter a low-power state, 
        reducing notifications and conserving energy.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceSleepPlanBean'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /device/getDeviceAttributes:
    post:
      tags:
        - Device Management
      summary: Get device attributes
      description: |
        Retrieves detailed device information including hardware specifications, 
        real-time status, and configurable settings. This endpoint provides comprehensive
        information about a device's capabilities and current state.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceAttributesRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceAttributesResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /device/otastatus/:
    post:
      tags:
        - Device Management
      summary: Get device update status
      description: |
        Retrieves the current status of firmware updates for a device. This endpoint
        can be used to check if an update is in progress, the progress percentage,
        and the target firmware version.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SNEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OtaStatusResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /device/selectsingledevice:
    post:
      tags:
        - Device Management
      summary: Get single device data
      description: |
        Retrieves comprehensive information about a specific device. This endpoint provides
        detailed device information including model details, status information, location,
        thumbnail image data, SD card information, and supported features.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SNEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleDeviceResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /device/listuserdevices:
    post:
      tags:
        - Device Management
      summary: List all devices
      description: |
        Retrieves a list of all devices associated with the user's account. This endpoint
        provides an overview of all devices, including their status, location, and key attributes.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeviceResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /location/listlocation:
    post:
      tags:
        - Location Management
      summary: List all locations
      description: |
        Retrieves a list of all locations associated with the user's account. Locations
        are used to organize devices geographically, helping users manage devices
        across multiple sites.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /device/dormancy/list:
    post:
      tags:
        - Device Management
      summary: List all sleep plans
      description: |
        Retrieves all sleep plans configured for a specific device. Sleep plans define 
        specific time periods during which the device will enter a low-power state,
        reducing notifications and conserving energy.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SNEntry'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSleepPlanResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /device/queryMessageNotification/v1:
    post:
      tags:
        - AI Features
      summary: Get person detection settings
      description: |
        Retrieves AI detection notification settings for a specific device. This endpoint
        allows users to query which types of AI detections (people, packages, pets, 
        vehicles, etc.) are configured to trigger notifications.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonDetectionRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetectionResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /device/modifyDeviceAttributes:
    post:
      tags:
        - Device Management
      summary: Update device attributes
      description: |
        Modifies specific device attributes and settings. This endpoint allows users to
        update configurable device properties including device name, location assignment,
        and various feature settings.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyDeviceAttributesRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /device/rotate-calibration:
    post:
      tags:
        - Device Management
      summary: Device rotation calibration
      description: |
        Calibrates the rotation orientation for compatible devices. This allows users to
        correctly configure the device's orientation and ensure that video streams and
        recordings are properly displayed.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RotateCalibrationRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /device/dormancy/switch:
    post:
      tags:
        - Device Management
      summary: Sleep mode settings
      description: |
        Controls the sleep mode functionality for a device. This setting determines whether
        the device's sleep plans are actively enforced or temporarily suspended.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SleepSwitchSettingRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /device/otastart/:
    post:
      tags:
        - Device Management
      summary: Start device update
      description: |
        Initiates a firmware update for a device. This endpoint triggers the download and
        installation of new firmware when available, improving device functionality and security.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartOtaRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /device/deactivatedevice:
    post:
      tags:
        - Device Management
      summary: Unbind devices
      description: |
        Removes a device from the user's account. This operation disassociates the device
        from the current user, allowing it to be claimed by another account if needed.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnbindDeviceRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /aiAssist/queryEventObjectSwitch:
    post:
      tags:
        - AI Features
      summary: Query AI event information
      description: |
        Retrieves the current AI event detection settings for a specific device.
        This endpoint allows users to check which types of AI-powered events
        (people, vehicles, animals, etc.) are enabled for detection.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryAiEventInfoRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryAiEventInfoResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /aiAssist/updateEventObjectSwitch:
    post:
      tags:
        - AI Features
      summary: Update object detection settings
      description: |
        Updates the AI event detection settings for a specific device. This endpoint allows
        users to enable or disable specific types of AI-powered event detection
        (people, vehicles, animals, etc.).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEventObjectSwitchRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /location/updatelocationinfo:
    post:
      tags:
        - Location Management
      summary: Update location data
      description: |
        Updates information for an existing location. This endpoint allows users to
        modify location properties such as name, address, and coordinates.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLocationRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /usersetting/queryswitch:
    post:
      tags:
        - Notification Management
      summary: Query push notification settings
      description: |
        Retrieves the current push notification settings for a user's account.
        This endpoint allows users to check which notification types are enabled
        for their devices and account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryMargePushSwitchRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryMargePushSwitchResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /usersetting/switch:
    post:
      tags:
        - Notification Management
      summary: Update push notification settings
      description: |
        Updates the push notification settings for a user's account. This endpoint
        allows users to enable or disable specific types of notifications
        for their devices and account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMargePushSwitchRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /device/updateMessageNotification/v1:
    post:
      tags:
        - AI Features
      summary: Upload person detection information
      description: |
        Updates the person detection notification settings for a specific device.
        This endpoint allows users to configure how person detection events are
        processed and which notification types are triggered.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadPersonDetectionDetailInfoRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /vip/device/cloud/info:
    post:
      tags:
        - VIP Services
      summary: Query VIP information
      description: |
        Retrieves VIP subscription information for a specific device. This endpoint
        provides details about cloud storage subscriptions, premium features,
        and subscription status.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryDeviceCloudVipInfoRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDeviceCloudVipInfoResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /vip/freetier/info:
    post:
      tags:
        - VIP Services
      summary: Query free tier information
      description: |
        Retrieves information about the free tier service available for a device.
        This endpoint provides details about the features and limitations of the
        free service level.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryFreeTierRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryFreeTierResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /dc/rtcconnection/close:
    post:
      tags:
        - P2P Connections
      summary: Close peer-to-peer connection
      description: |
        Closes an active peer-to-peer connection with a device. This endpoint terminates
        the real-time communication session between the client and a camera.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloseP2PConnectionRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /library/deletelibrary/:
    post:
      tags:
        - Library Management
      summary: Delete videos/recordings
      description: |
        Deletes specific recordings from the cloud library. This operation permanently
        removes the selected recordings and cannot be undone.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRecordRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /library/newselectlibrary:
    post:
      tags:
        - Library Management
      summary: Get details for an event
      description: |
        Retrieves detailed information about a specific event recording. This endpoint
        provides comprehensive metadata about a single recorded event, including
        timestamps, thumbnails, and event classification.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetEventDetailRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEventDetailResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /library/newselectlibrary/newevent:
    post:
      tags:
        - Library Management
      summary: Get recordings filtered by criteria
      description: |
        Retrieves a list of recordings based on specified filter criteria. This endpoint
        allows users to search for recordings by date range, event type, device,
        and other attributes.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetEventRecordByFilterRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEventRecordByFilterResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /library/newselectsinglelibrary:
    post:
      tags:
        - Library Management
      summary: Get library data by trace ID
      description: |
        Retrieves library data for a specific recording identified by its trace ID.
        This endpoint provides detailed information about a single recording, including
        playback URLs, thumbnails, and metadata.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetLibraryByTraceIdRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLibraryByTraceIdResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /library/librarystatus:
    post:
      tags:
        - Library Management
      summary: Get library status
      description: |
        Retrieves the current status of the cloud recording library for a specific device.
        This endpoint provides information about storage utilization, recording capacity,
        and subscription status.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetLibraryStatusRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLibraryStatusResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /dc/rtcconnection/open:
    post:
      tags:
        - P2P Connections
      summary: Open peer-to-peer connection
      description: |
        Establishes a peer-to-peer connection with a device for real-time video streaming.
        This endpoint initiates the WebRTC connection process between the client and
        a camera for live viewing.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenP2PConnectionRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenP2PConnectionResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /device/queryUserActivityZone:
    get:
      tags:
        - Activity Zones
      summary: Query user activity zones
      description: |
        Retrieves all activity zones configured across the user's devices. This endpoint
        provides a comprehensive view of all activity zone configurations for all
        cameras in the user's account.
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
          description: Authentication token received from login
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryUserActivityZoneResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /library/queryVideoSearchOption:
    post:
      tags:
        - Search Options
      summary: Search for videos with options
      description: |
        Retrieves available search options for video queries. This endpoint provides
        information about the valid search parameters, filter options, and sorting
        methods available for video search operations.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryVideoSearchOptionRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryVideoSearchOptionResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /library/queryVideoSearchOptionBySn:
    post:
      tags:
        - Search Options
      summary: Search for videos by serial number
      description: |
        Retrieves available search options for a specific device identified by serial number.
        This endpoint provides device-specific information about valid search parameters,
        filter options, and sorting methods for video search operations.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryVideoSearchOptionBySnRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryVideoSearchOptionBySnResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /library/updatemarked:
    post:
      tags:
        - Recording Management
      summary: Set mark status for recordings
      description: |
        Updates the "marked" status for specific recordings. This endpoint allows users
        to mark or unmark recordings as favorites or important, making them easier to
        find and protecting them from automatic deletion.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetMarkStatusRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /library/updatemissing:
    post:
      tags:
        - Recording Management
      summary: Set read status for recordings
      description: |
        Updates the "read" status for specific recordings. This endpoint allows users
        to mark recordings as viewed or unviewed, helping to track which events have
        been reviewed.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetReadStatusRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /vip/available/purchase/device:
    post:
      tags:
        - Payment Management
      summary: Get purchase information for a device
      description: |
        Retrieves information about subscription purchase options available for a specific device.
        This endpoint provides details on pricing, available plans, and device compatibility.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPurchaseDeviceRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPurchaseDeviceResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /vip/tier/list/v4:
    post:
      tags:
        - Payment Management
      summary: Get subscription tier options
      description: |
        Retrieves a list of available subscription tiers and their details.
        This endpoint provides information about pricing, storage limits, feature sets,
        and other attributes of different subscription plans.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTierListV4Request'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTierListV4Response'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /vip/user/service/info:
    post:
      tags:
        - Payment Management
      summary: Get VIP user service information
      description: |
        Retrieves detailed information about a user's VIP service subscriptions.
        This endpoint provides data on active plans, expiration dates, payment history,
        and account status for premium services.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetVipUserServiceInfoRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVipUserServiceInfoResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /vip/user/device/list:
    post:
      tags:
        - Payment Management
      summary: Query VIP device positions
      description: |
        Retrieves information about which devices in a user's account have VIP subscriptions
        and what subscription slots are available. This endpoint shows how premium
        subscriptions are allocated across the user's devices.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryVipDevicePositionRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryVipDevicePositionResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /vip/user/rolling/day:
    post:
      tags:
        - Payment Management
      summary: Update user billing cycle day
      description: |
        Updates the day of the month when a user's billing cycle renews.
        This endpoint allows users to align their subscription renewal dates
        with their preferred payment schedule.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRollingDayRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /pay/google/order/verify:
    post:
      tags:
        - Payment Management
      summary: Process Google Pay payments
      description: |
        Processes and verifies Google Pay payment information for subscription purchases.
        This endpoint handles the payment verification, provisioning of services,
        and updating of subscription records.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadGooglePayInfoRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadGooglePayInfoResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    BaseEntry:
      type: object
      properties:
        token:
          type: string
          description: Authentication token received from login
      required:
        - token
    
    AccountEntry:
      type: object
      properties:
        account:
          type: string
          description: Email address or phone number of the user
        password:
          type: string
          description: Password for authentication
        deviceUUID:
          type: string
          description: Unique device identifier
      required:
        - account
        - password
        - deviceUUID
    
    BaseResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: Response code (0 means success)
        message:
          type: string
          example: "Success"
          description: Response message
      required:
        - code
        - message
    
    LoginResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: Response code (0 means success)
        data:
          type: object
          properties:
            token:
              type: string
              description: Authentication token for subsequent API calls
            refreshtoken:
              type: string
              description: Token used to refresh the authentication token
            userInfo:
              type: object
              properties:
                userID:
                  type: string
                  description: Unique identifier for the user
                nickname:
                  type: string
                  description: User's display name
                avatar:
                  type: string
                  description: URL to the user's profile picture
            timestamp:
              type: integer
              description: Server timestamp of when the token was issued
        message:
          type: string
          example: "Success"
          description: Response message
      required:
        - code
        - data
        - message
    
    NodeInfoResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: Response code (0 means success)
        data:
          type: object
          properties:
            countryCode:
              type: string
              example: "US"
              description: ISO country code of the detected IP location
            ip:
              type: string
              description: User's IP address as seen by the server
        message:
          type: string
          example: "Success"
          description: Response message
      required:
        - code
        - data
        - message
    
    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          example: 400
          description: Error code
        message:
          type: string
          example: "Invalid request parameters"
          description: Error message describing what went wrong
      required:
        - code
        - message

    SNEntry:
      type: object
      properties:
        token:
          type: string
          description: Authentication token received from login
        sn:
          type: string
          description: Serial number of the device
      required:
        - token
        - sn
        
    CommonSNRequest:
      type: object
      properties:
        token:
          type: string
          description: Authentication token received from login
        sn:
          type: string
          description: Serial number of the device
      required:
        - token
        - sn

    CloseP2PConnectionRequest:
      type: object
      properties:
        token:
          type: string
          description: Authentication token received from login
        sn:
          type: string
          description: Serial number of the device
        sessionId:
          type: string
          description: ID of the active P2P session to close
      required:
        - token
        - sn
        - sessionId

    DeleteRecordRequest:
      type: object
      properties:
        token:
          type: string
          description: Authentication token received from login
        traceIds:
          type: array
          items:
            type: string
          description: List of trace IDs for recordings to delete
      required:
        - token
        - traceIds

    GetEventDetailRequest:
      type: object
      properties:
        token:
          type: string
          description: Authentication token received from login
        traceId:
          type: string
          description: Trace ID of the event recording
      required:
        - token
        - traceId

    GetEventDetailResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: Response code (0 means success)
        data:
          type: object
          properties:
            eventDetail:
              $ref: '#/components/schemas/EventDetailInfo'
        message:
          type: string
          example: "Success"
          description: Response message
      required:
        - code
        - data
        - message

    EventDetailInfo:
      type: object
      properties:
        traceId:
          type: string
          description: Unique identifier for the recording
        deviceSN:
          type: string
          description: Serial number of the device that recorded the event
        startTime:
          type: string
          format: date-time
          description: Start time of the recording
        endTime:
          type: string
          format: date-time
          description: End time of the recording
        eventType:
          type: string
          description: Type of event (motion, person, vehicle, etc.)
        thumbnailUrl:
          type: string
          description: URL to the thumbnail image
        playbackUrl:
          type: string
          description: URL for video playback
        isRead:
          type: boolean
          description: Whether the event has been viewed
        isMarked:
          type: boolean
          description: Whether the event is marked as favorite
        detectionInfo:
          type: object
          description: Additional detection details

    GetEventRecordByFilterRequest:
      type: object
      properties:
        token:
          type: string
          description: Authentication token received from login
        filters:
          type: object
          properties:
            deviceSN:
              type: string
              description: Filter by device serial number
            startTime:
              type: string
              format: date-time
              description: Filter events after this time
            endTime:
              type: string
              format: date-time
              description: Filter events before this time
            eventTypes:
              type: array
              items:
                type: string
              description: Types of events to include
            isRead:
              type: boolean
              description: Filter by read status
            isMarked:
              type: boolean
              description: Filter by marked status
        pagination:
          type: object
          properties:
            pageSize:
              type: integer
              description: Number of items per page
            pageNumber:
              type: integer
              description: Page number to retrieve (0-based)
      required:
        - token
        - filters
        - pagination

    GetEventRecordByFilterResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: Response code (0 means success)
        data:
          type: object
          properties:
            totalCount:
              type: integer
              description: Total number of events matching the filter
            events:
              type: array
              items:
                $ref: '#/components/schemas/EventSummaryInfo'
        message:
          type: string
          example: "Success"
          description: Response message
      required:
        - code
        - data
        - message

    EventSummaryInfo:
      type: object
      properties:
        traceId:
          type: string
          description: Unique identifier for the recording
        deviceSN:
          type: string
          description: Serial number of the device that recorded the event
        startTime:
          type: string
          format: date-time
          description: Start time of the recording
        eventType:
          type: string
          description: Type of event (motion, person, vehicle, etc.)
        thumbnailUrl:
          type: string
          description: URL to the thumbnail image
        isRead:
          type: boolean
          description: Whether the event has been viewed
        isMarked:
          type: boolean
          description: Whether the event is marked as favorite

    GetLibraryByTraceIdRequest:
      type: object
      properties:
        token:
          type: string
          description: Authentication token received from login
        traceId:
          type: string
          description: Trace ID of the recording
      required:
        - token
        - traceId

    GetLibraryByTraceIdResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: Response code (0 means success)
        data:
          type: object
          properties:
            libraryDetail:
              $ref: '#/components/schemas/LibraryDetailInfo'
        message:
          type: string
          example: "Success"
          description: Response message
      required:
        - code
        - data
        - message

    LibraryDetailInfo:
      type: object
      properties:
        traceId:
          type: string
          description: Unique identifier for the recording
        deviceSN:
          type: string
          description: Serial number of the device that recorded the event
        startTime:
          type: string
          format: date-time
          description: Start time of the recording
        endTime:
          type: string
          format: date-time
          description: End time of the recording
        duration:
          type: integer
          description: Duration in seconds
        fileSize:
          type: integer
          description: Size of the recording in bytes
        thumbnailUrl:
          type: string
          description: URL to the thumbnail image
        playbackUrl:
          type: string
          description: URL for video playback
        downloadUrl:
          type: string
          description: URL for downloading the recording
        isRead:
          type: boolean
          description: Whether the recording has been viewed
        isMarked:
          type: boolean
          description: Whether the recording is marked as favorite

    GetLibraryStatusRequest:
      type: object
      properties:
        token:
          type: string
          description: Authentication token received from login
        sn:
          type: string
          description: Serial number of the device
      required:
        - token
        - sn

    GetLibraryStatusResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: Response code (0 means success)
        data:
          type: object
          properties:
            storageInfo:
              type: object
              properties:
                totalStorage:
                  type: integer
                  description: Total available storage in megabytes
                usedStorage:
                  type: integer
                  description: Used storage in megabytes
                retentionDays:
                  type: integer
                  description: Number of days recordings are retained
            subscriptionInfo:
              type: object
              properties:
                isSubscribed:
                  type: boolean
                  description: Whether cloud storage is subscribed
                tierName:
                  type: string
                  description: Name of the subscription tier
                expirationDate:
                  type: string
                  format: date-time
                  description: Expiration date of the subscription
            recordingStatus:
              type: string
              enum: [active, disabled, paused]
              description: Current status of cloud recording
        message:
          type: string
          example: "Success"
          description: Response message
      required:
        - code
        - data
        - message

    OpenP2PConnectionRequest:
      type: object
      properties:
        token:
          type: string
          description: Authentication token received from login
        sn:
          type: string
          description: Serial number of the device
        connectionType:
          type: string
          enum: [live, playback]
          description: Type of connection to establish
      required:
        - token
        - sn
        - connectionType

    OpenP2PConnectionResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: Response code (0 means success)
        data:
          type: object
          properties:
            sessionId:
              type: string
              description: ID of the established P2P session
            iceServers:
              type: array
              items:
                type: object
                properties:
                  urls:
                    type: array
                    items:
                      type: string
                    description: STUN/TURN server URLs
                  username:
                    type: string
                    description: Username for TURN server
                  credential:
                    type: string
                    description: Credential for TURN server
            signalingData:
              type: object
              description: Initial signaling data for WebRTC connection
        message:
          type: string
          example: "Success"
          description: Response message
      required:
        - code
        - data
        - message

    QueryUserActivityZoneResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: Response code (0 means success)
        data:
          type: object
          properties:
            deviceZones:
              type: array
              items:
                type: object
                properties:
                  deviceSN:
                    type: string
                    description: Serial number of the device
                  deviceName:
                    type: string
                    description: Name of the device
                  zones:
                    type: array
                    items:
                      $ref: '#/components/schemas/ActivityZoneInfo'
        message:
          type: string
          example: "Success"
          description: Response message
      required:
        - code
        - data
        - message

    ActivityZoneInfo:
      type: object
      properties:
        zoneId:
          type: string
          description: Unique identifier for the zone
        zoneName:
          type: string
          description: User-defined name for the zone
        coordinates:
          type: array
          items:
            type: object
            properties:
              x:
                type: number
                format: float
                description: X coordinate (0-1)
              y:
                type: number
                format: float
                description: Y coordinate (0-1)
          description: Array of coordinate points defining the zone polygon
        isEnabled:
          type: boolean
          description: Whether the zone is active
        sensitivityLevel:
          type: integer
          minimum: 1
          maximum: 100
          description: Detection sensitivity level

    QueryVideoSearchOptionRequest:
      type: object
      properties:
        token:
          type: string
          description: Authentication token received from login
      required:
        - token

    QueryVideoSearchOptionResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: Response code (0 means success)
        data:
          type: object
          properties:
            eventTypes:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: Event type identifier
                  name:
                    type: string
                    description: Display name for the event type
                  icon:
                    type: string
                    description: Icon URL for the event type
            sortOptions:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: Sort option identifier
                  name:
                    type: string
                    description: Display name for the sort option
            dateRangeOptions:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: Date range identifier
                  name:
                    type: string
                    description: Display name for the date range
                  days:
                    type: integer
                    description: Number of days in this range
        message:
          type: string
          example: "Success"
          description: Response message
      required:
        - code
        - data
        - message

    QueryVideoSearchOptionBySnRequest:
      type: object
      properties:
        token:
          type: string
          description: Authentication token received from login
        sn:
          type: string
          description: Serial number of the device
      required:
        - token
        - sn

    QueryVideoSearchOptionBySnResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: Response code (0 means success)
        data:
          type: object
          properties:
            deviceSpecificEventTypes:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: Event type identifier
                  name:
                    type: string
                    description: Display name for the event type
                  icon:
                    type: string
                    description: Icon URL for the event type
            sortOptions:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: Sort option identifier
                  name:
                    type: string
                    description: Display name for the sort option
            dateRangeOptions:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: Date range identifier
                  name:
                    type: string
                    description: Display name for the date range
                  days:
                    type: integer
                    description: Number of days in this range
            deviceCapabilities:
              type: object
              properties:
                supportsContinuousRecording:
                  type: boolean
                  description: Whether the device supports continuous recording
                supportsEventRecording:
                  type: boolean
                  description: Whether the device supports event-triggered recording
                supportsLocalStorage:
                  type: boolean
                  description: Whether the device supports local storage
        message:
          type: string
          example: "Success"
          description: Response message
      required:
        - code
        - data
        - message

    SetMarkStatusRequest:
      type: object
      properties:
        token:
          type: string
          description: Authentication token received from login
        traceIds:
          type: array
          items:
            type: string
          description: List of trace IDs for recordings to update
        isMarked:
          type: boolean
          description: New marked status (true to mark, false to unmark)
      required:
        - token
        - traceIds
        - isMarked

    SetReadStatusRequest:
      type: object
      properties:
        token:
          type: string
          description: Authentication token received from login
        traceIds:
          type: array
          items:
            type: string
          description: List of trace IDs for recordings to update
        isRead:
          type: boolean
          description: New read status (true for read, false for unread)
      required:
        - token
        - traceIds
        - isRead

    OptionTag:
      type: object
      properties:
        name:
          type: string
          description: Tag name or identifier
        displayName:
          type: string
          description: Localized display name for the tag
        count:
          type: integer
          description: Count of recordings with this tag
        checked:
          type: boolean
          description: Whether the tag is selected by default
        subTags:
          type: array
          items:
            $ref: '#/components/schemas/OptionTag'
          description: List of nested sub-tags
          
    OptionDevice:
      type: object
      properties:
        serialNumber:
          type: string
          description: Device serial number
        deviceName:
          type: string
          description: User-assigned device name
        modelCategory:
          type: integer
          description: Device model category
        roleId:
          type: integer
          description: User role ID
        isBind:
          type: boolean
          description: Whether the device is bound to the user
        online:
          type: integer
          enum: [0, 1]
          description: Online status (1=online, 0=offline)
        activityZone:
          type: array
          items:
            $ref: '#/components/schemas/OptionTag'
          description: List of activity zones for this device
          
    TagBean:
      type: object
      properties:
        aiEventTags:
          type: array
          items:
            $ref: '#/components/schemas/OptionTag'
          description: List of AI event tags
        deviceEventTags:
          type: array
          items:
            $ref: '#/components/schemas/OptionTag'
          description: List of device event tags
        devices:
          type: array
          items:
            $ref: '#/components/schemas/OptionDevice'
          description: List of devices
        operateOptions:
          type: array
          items:
            $ref: '#/components/schemas/OptionTag'
          description: List of operation options
          
    VideoSearchOptionResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: Response code (0 means success)
        message:
          type: string
          example: "Success"
          description: Response message
        data:
          $ref: '#/components/schemas/TagBean'
      required:
        - code
        - message
        - data
        
    ZoneBean:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the zone
        serialNumber:
          type: string
          description: Device serial number
        zoneName:
          type: string
          description: Name of the activity zone
        vertices:
          type: string
          description: Comma-separated coordinates defining the zone shape
        needRecord:
          type: integer
          enum: [0, 1]
          description: Flag to record events in this zone
        needAlarm:
          type: integer
          enum: [0, 1]
          description: Flag to trigger alarm for events
        needPush:
          type: integer
          enum: [0, 1]
          description: Flag to send push notifications
        zoneNameId:
          type: integer
          description: Identifier for the zone name
        modelCategory:
          type: integer
          description: Model category identifier
        deviceName:
          type: string
          description: Name of the device
        deviceBean:
          type: object
          description: Additional device information
        isSelect:
          type: boolean
          description: Selection state
      
    UserAllAZResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: Response code (0 means success)
        message:
          type: string
          example: "Success"
          description: Response message
        data:
          type: array
          items:
            $ref: '#/components/schemas/ZoneBean'
          description: List of all activity zones
      required:
        - code
        - message
        - data

    GetPurchaseDeviceRequest:
      type: object
      properties:
        token:
          type: string
          description: Authentication token received from login
        sn:
          type: string
          description: Serial number of the device
      required:
        - token
        - sn

    GetPurchaseDeviceResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: Response code (0 means success)
        data:
          type: object
          properties:
            deviceInfo:
              type: object
              properties:
                sn:
                  type: string
                  description: Serial number of the device
                deviceModel:
                  type: string
                  description: Model name of the device
                isEligible:
                  type: boolean
                  description: Whether the device is eligible for subscription
            availableTiers:
              type: array
              items:
                $ref: '#/components/schemas/TierInfo'
        message:
          type: string
          example: "Success"
          description: Response message
      required:
        - code
        - data
        - message

    GetTierListV4Request:
      type: object
      properties:
        token:
          type: string
          description: Authentication token received from login
        type:
          type: string
          description: Type of subscription tiers to retrieve (standard or 4G)
      required:
        - token
        - type

    GetTierListV4Response:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: Response code (0 means success)
        data:
          type: object
          properties:
            tiers:
              type: array
              items:
                $ref: '#/components/schemas/TierInfo'
        message:
          type: string
          example: "Success"
          description: Response message
      required:
        - code
        - data
        - message

    TierInfo:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the tier
        name:
          type: string
          description: Display name of the tier
        description:
          type: string
          description: Description of what the tier offers
        price:
          type: number
          format: float
          description: Price of the subscription
        currency:
          type: string
          description: Currency code (USD, EUR, etc.)
        billingCycle:
          type: string
          enum: [monthly, yearly]
          description: Billing frequency
        features:
          type: array
          items:
            type: string
          description: List of features included in this tier
        storageDays:
          type: integer
          description: Number of days recordings are stored
        storageGB:
          type: integer
          description: Storage space in gigabytes

    GetVipUserServiceInfoRequest:
      type: object
      properties:
        token:
          type: string
          description: Authentication token received from login
      required:
        - token

    GetVipUserServiceInfoResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: Response code (0 means success)
        data:
          type: object
          properties:
            subscriptions:
              type: array
              items:
                $ref: '#/components/schemas/SubscriptionInfo'
            paymentHistory:
              type: array
              items:
                $ref: '#/components/schemas/PaymentRecord'
            accountStatus:
              type: string
              description: Status of the user's VIP account
        message:
          type: string
          example: "Success"
          description: Response message
      required:
        - code
        - data
        - message

    SubscriptionInfo:
      type: object
      properties:
        subscriptionId:
          type: string
          description: Unique identifier for the subscription
        tierId:
          type: string
          description: Identifier of the subscribed tier
        tierName:
          type: string
          description: Name of the subscribed tier
        startDate:
          type: string
          format: date-time
          description: Start date of the subscription
        renewalDate:
          type: string
          format: date-time
          description: Next renewal date
        status:
          type: string
          enum: [active, canceled, expired, pending]
          description: Current status of the subscription
        assignedDevices:
          type: array
          items:
            type: string
          description: Serial numbers of devices using this subscription

    PaymentRecord:
      type: object
      properties:
        transactionId:
          type: string
          description: Unique identifier for the payment transaction
        amount:
          type: number
          format: float
          description: Amount charged
        currency:
          type: string
          description: Currency code
        date:
          type: string
          format: date-time
          description: Date of the transaction
        paymentMethod:
          type: string
          description: Payment method used
        status:
          type: string
          enum: [successful, failed, refunded, pending]
          description: Status of the payment

    QueryVipDevicePositionRequest:
      type: object
      properties:
        token:
          type: string
          description: Authentication token received from login
      required:
        - token

    QueryVipDevicePositionResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: Response code (0 means success)
        data:
          type: object
          properties:
            devices:
              type: array
              items:
                $ref: '#/components/schemas/VipDeviceInfo'
            availableSlots:
              type: integer
              description: Number of available subscription slots
        message:
          type: string
          example: "Success"
          description: Response message
      required:
        - code
        - data
        - message

    VipDeviceInfo:
      type: object
      properties:
        sn:
          type: string
          description: Serial number of the device
        deviceName:
          type: string
          description: Name of the device
        deviceModel:
          type: string
          description: Model of the device
        subscriptionId:
          type: string
          description: ID of the assigned subscription
        tierName:
          type: string
          description: Name of the subscription tier
        expirationDate:
          type: string
          format: date-time
          description: Expiration date of the subscription

    UpdateUserRollingDayRequest:
      type: object
      properties:
        token:
          type: string
          description: Authentication token received from login
        rollingDay:
          type: integer
          minimum: 1
          maximum: 31
          description: Day of the month for subscription renewal
      required:
        - token
        - rollingDay

    UploadGooglePayInfoRequest:
      type: object
      properties:
        token:
          type: string
          description: Authentication token received from login
        purchaseToken:
          type: string
          description: Google Pay purchase token
        productId:
          type: string
          description: ID of the purchased product
        packageName:
          type: string
          description: Package name of the application
        deviceSN:
          type: string
          description: Serial number of the device to assign the subscription to
      required:
        - token
        - purchaseToken
        - productId
        - packageName
        - deviceSN

    UploadGooglePayInfoResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
          description: Response code (0 means success)
        data:
          type: object
          properties:
            transactionId:
              type: string
              description: Unique identifier for the transaction
            subscriptionId:
              type: string
              description: ID of the activated subscription
            activationDate:
              type: string
              format: date-time
              description: Date when the subscription was activated
            expirationDate:
              type: string
              format: date-time
              description: Expiration date of the subscription
        message:
          type: string
          example: "Success"
          description: Response message
      required:
        - code
        - data
        - message